{"version":3,"file":"static/js/278.ed7e500d.chunk.js","mappings":"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","sources":["../node_modules/@nextui-org/react-utils/dist/chunk-CIZQCQPA.mjs","../node_modules/@nextui-org/switch/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useHover.ts","../node_modules/@nextui-org/switch/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/platform.ts","../node_modules/@nextui-org/switch/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/domHelpers.ts","../node_modules/@nextui-org/switch/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/runAfterTransition.ts","../node_modules/@nextui-org/switch/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/textSelection.ts","../node_modules/@nextui-org/switch/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/context.ts","../node_modules/@nextui-org/switch/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/chain.ts","../node_modules/@nextui-org/switch/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useId.ts","../node_modules/@nextui-org/switch/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/mergeProps.ts","../node_modules/@nextui-org/switch/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useLayoutEffect.ts","../node_modules/@nextui-org/switch/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useSyncRef.ts","../node_modules/@nextui-org/switch/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useGlobalListeners.ts","../node_modules/@nextui-org/switch/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useEffectEvent.ts","../node_modules/@nextui-org/switch/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/focusWithoutScrolling.ts","../node_modules/@nextui-org/switch/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/openLink.tsx","../node_modules/@nextui-org/switch/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/isVirtualEvent.ts","../node_modules/@nextui-org/switch/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/usePress.ts","../node_modules/@nextui-org/theme/dist/chunk-WUUKIKPR.mjs","../node_modules/@react-aria/toggle/dist/packages/@react-aria/toggle/src/useToggle.ts","../node_modules/@react-aria/switch/dist/packages/@react-aria/switch/src/useSwitch.ts","../node_modules/@nextui-org/switch/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useFocusVisible.ts","../node_modules/@nextui-org/switch/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/utils.ts","../node_modules/@nextui-org/switch/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useFocus.ts","../node_modules/@nextui-org/switch/node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useFocusWithin.ts","../node_modules/@nextui-org/switch/node_modules/@react-aria/focus/dist/packages/@react-aria/focus/src/useFocusRing.ts","../node_modules/@nextui-org/switch/dist/chunk-JYO7OWIA.mjs","../node_modules/@react-stately/toggle/dist/packages/@react-stately/toggle/src/useToggleState.ts","../node_modules/@nextui-org/switch/dist/chunk-VMWQTXAV.mjs","../node_modules/@nextui-org/use-safe-layout-effect/dist/index.mjs","../node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useFormReset.ts","../node_modules/@react-aria/visually-hidden/dist/packages/@react-aria/visually-hidden/src/VisuallyHidden.tsx","../node_modules/@react-stately/utils/dist/packages/@react-stately/utils/src/useControlledState.ts"],"sourcesContent":["\"use client\";\n\n// src/refs.ts\nimport { isFunction } from \"@nextui-org/shared-utils\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (isFunction(ref)) {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => assignRef(ref, node));\n  };\n}\n\nexport {\n  assignRef,\n  mergeRefs\n};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes, HoverEvents} from '@react-types/shared';\nimport {useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface HoverProps extends HoverEvents {\n  /** Whether the hover events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface HoverResult {\n  /** Props to spread on the target element. */\n  hoverProps: DOMAttributes,\n  isHovered: boolean\n}\n\n// iOS fires onPointerEnter twice: once with pointerType=\"touch\" and again with pointerType=\"mouse\".\n// We want to ignore these emulated events so they do not trigger hover behavior.\n// See https://bugs.webkit.org/show_bug.cgi?id=214609.\nlet globalIgnoreEmulatedMouseEvents = false;\nlet hoverCount = 0;\n\nfunction setGlobalIgnoreEmulatedMouseEvents() {\n  globalIgnoreEmulatedMouseEvents = true;\n\n  // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n  // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n  // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n  // the distant future because a user previously touched the element.\n  setTimeout(() => {\n    globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\n\nfunction handleGlobalPointerEvent(e) {\n  if (e.pointerType === 'touch') {\n    setGlobalIgnoreEmulatedMouseEvents();\n  }\n}\n\nfunction setupGlobalTouchEvents() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerup', handleGlobalPointerEvent);\n  } else {\n    document.addEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n  }\n\n  hoverCount++;\n  return () => {\n    hoverCount--;\n    if (hoverCount > 0) {\n      return;\n    }\n\n    if (typeof PointerEvent !== 'undefined') {\n      document.removeEventListener('pointerup', handleGlobalPointerEvent);\n    } else {\n      document.removeEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n    }\n  };\n}\n\n/**\n * Handles pointer hover interactions for an element. Normalizes behavior\n * across browsers and platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useHover(props: HoverProps): HoverResult {\n  let {\n    onHoverStart,\n    onHoverChange,\n    onHoverEnd,\n    isDisabled\n  } = props;\n\n  let [isHovered, setHovered] = useState(false);\n  let state = useRef({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false,\n    pointerType: '',\n    target: null\n  }).current;\n\n  useEffect(setupGlobalTouchEvents, []);\n\n  let {hoverProps, triggerHoverEnd} = useMemo(() => {\n    let triggerHoverStart = (event, pointerType) => {\n      state.pointerType = pointerType;\n      if (isDisabled || pointerType === 'touch' || state.isHovered || !event.currentTarget.contains(event.target)) {\n        return;\n      }\n\n      state.isHovered = true;\n      let target = event.currentTarget;\n      state.target = target;\n\n      if (onHoverStart) {\n        onHoverStart({\n          type: 'hoverstart',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(true);\n      }\n\n      setHovered(true);\n    };\n\n    let triggerHoverEnd = (event, pointerType) => {\n      state.pointerType = '';\n      state.target = null;\n\n      if (pointerType === 'touch' || !state.isHovered) {\n        return;\n      }\n\n      state.isHovered = false;\n      let target = event.currentTarget;\n      if (onHoverEnd) {\n        onHoverEnd({\n          type: 'hoverend',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(false);\n      }\n\n      setHovered(false);\n    };\n\n    let hoverProps: DOMAttributes = {};\n\n    if (typeof PointerEvent !== 'undefined') {\n      hoverProps.onPointerEnter = (e) => {\n        if (globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') {\n          return;\n        }\n\n        triggerHoverStart(e, e.pointerType);\n      };\n\n      hoverProps.onPointerLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as Element)) {\n          triggerHoverEnd(e, e.pointerType);\n        }\n      };\n    } else {\n      hoverProps.onTouchStart = () => {\n        state.ignoreEmulatedMouseEvents = true;\n      };\n\n      hoverProps.onMouseEnter = (e) => {\n        if (!state.ignoreEmulatedMouseEvents && !globalIgnoreEmulatedMouseEvents) {\n          triggerHoverStart(e, 'mouse');\n        }\n\n        state.ignoreEmulatedMouseEvents = false;\n      };\n\n      hoverProps.onMouseLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as Element)) {\n          triggerHoverEnd(e, 'mouse');\n        }\n      };\n    }\n    return {hoverProps, triggerHoverEnd};\n  }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]);\n\n  useEffect(() => {\n    // Call the triggerHoverEnd as soon as isDisabled changes to true\n    // Safe to call triggerHoverEnd, it will early return if we aren't currently hovering\n    if (isDisabled) {\n      triggerHoverEnd({currentTarget: state.target}, state.pointerType);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled]);\n\n  return {\n    hoverProps,\n    isHovered\n  };\n}\n\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction testUserAgent(re: RegExp) {\n  if (typeof window === 'undefined' || window.navigator == null) {\n    return false;\n  }\n  return (\n    window.navigator['userAgentData']?.brands.some((brand: {brand: string, version: string}) => re.test(brand.brand))\n  ) ||\n  re.test(window.navigator.userAgent);\n}\n\nfunction testPlatform(re: RegExp) {\n  return typeof window !== 'undefined' && window.navigator != null\n    ? re.test(window.navigator['userAgentData']?.platform || window.navigator.platform)\n    : false;\n}\n\nexport function isMac() {\n  return testPlatform(/^Mac/i);\n}\n\nexport function isIPhone() {\n  return testPlatform(/^iPhone/i);\n}\n\nexport function isIPad() {\n  return testPlatform(/^iPad/i) ||\n    // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\n    (isMac() && navigator.maxTouchPoints > 1);\n}\n\nexport function isIOS() {\n  return isIPhone() || isIPad();\n}\n\nexport function isAppleDevice() {\n  return isMac() || isIOS();\n}\n\nexport function isWebKit() {\n  return testUserAgent(/AppleWebKit/i) && !isChrome();\n}\n\nexport function isChrome() {\n  return testUserAgent(/Chrome/i);\n}\n\nexport function isAndroid() {\n  return testUserAgent(/Android/i);\n}\n\nexport function isFirefox() {\n  return testUserAgent(/Firefox/i);\n}\n","export const getOwnerDocument = (el: Element | null | undefined): Document => {\n  return el?.ownerDocument ?? document;\n};\n\nexport const getOwnerWindow = (\n  el: (Window & typeof global) | Element | null | undefined\n): Window & typeof global => {\n  if (el && 'window' in el && el.window === el) {\n    return el;\n  }\n\n  const doc = getOwnerDocument(el as Element | null | undefined);\n  return doc.defaultView || window;\n};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// We store a global list of elements that are currently transitioning,\n// mapped to a set of CSS properties that are transitioning for that element.\n// This is necessary rather than a simple count of transitions because of browser\n// bugs, e.g. Chrome sometimes fires both transitionend and transitioncancel rather\n// than one or the other. So we need to track what's actually transitioning so that\n// we can ignore these duplicate events.\nlet transitionsByElement = new Map<EventTarget, Set<string>>();\n\n// A list of callbacks to call once there are no transitioning elements.\nlet transitionCallbacks = new Set<() => void>();\n\nfunction setupGlobalEvents() {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  function isTransitionEvent(event: Event): event is TransitionEvent {\n    return 'propertyName' in event;\n  }\n\n  let onTransitionStart = (e: Event) => {\n    if (!isTransitionEvent(e) || !e.target) {\n      return;\n    }\n    // Add the transitioning property to the list for this element.\n    let transitions = transitionsByElement.get(e.target);\n    if (!transitions) {\n      transitions = new Set();\n      transitionsByElement.set(e.target, transitions);\n\n      // The transitioncancel event must be registered on the element itself, rather than as a global\n      // event. This enables us to handle when the node is deleted from the document while it is transitioning.\n      // In that case, the cancel event would have nowhere to bubble to so we need to handle it directly.\n      e.target.addEventListener('transitioncancel', onTransitionEnd, {\n        once: true\n      });\n    }\n\n    transitions.add(e.propertyName);\n  };\n\n  let onTransitionEnd = (e: Event) => {\n    if (!isTransitionEvent(e) || !e.target) {\n      return;\n    }\n    // Remove property from list of transitioning properties.\n    let properties = transitionsByElement.get(e.target);\n    if (!properties) {\n      return;\n    }\n\n    properties.delete(e.propertyName);\n\n    // If empty, remove transitioncancel event, and remove the element from the list of transitioning elements.\n    if (properties.size === 0) {\n      e.target.removeEventListener('transitioncancel', onTransitionEnd);\n      transitionsByElement.delete(e.target);\n    }\n\n    // If no transitioning elements, call all of the queued callbacks.\n    if (transitionsByElement.size === 0) {\n      for (let cb of transitionCallbacks) {\n        cb();\n      }\n\n      transitionCallbacks.clear();\n    }\n  };\n\n  document.body.addEventListener('transitionrun', onTransitionStart);\n  document.body.addEventListener('transitionend', onTransitionEnd);\n}\n\nif (typeof document !== 'undefined') {\n  if (document.readyState !== 'loading') {\n    setupGlobalEvents();\n  } else {\n    document.addEventListener('DOMContentLoaded', setupGlobalEvents);\n  }\n}\n\nexport function runAfterTransition(fn: () => void) {\n  // Wait one frame to see if an animation starts, e.g. a transition on mount.\n  requestAnimationFrame(() => {\n    // If no transitions are running, call the function immediately.\n    // Otherwise, add it to a list of callbacks to run at the end of the animation.\n    if (transitionsByElement.size === 0) {\n      fn();\n    } else {\n      transitionCallbacks.add(fn);\n    }\n  });\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {getOwnerDocument, isIOS, runAfterTransition} from '@react-aria/utils';\n\n// Safari on iOS starts selecting text on long press. The only way to avoid this, it seems,\n// is to add user-select: none to the entire page. Adding it to the pressable element prevents\n// that element from being selected, but nearby elements may still receive selection. We add\n// user-select: none on touch start, and remove it again on touch end to prevent this.\n// This must be implemented using global state to avoid race conditions between multiple elements.\n\n// There are three possible states due to the delay before removing user-select: none after\n// pointer up. The 'default' state always transitions to the 'disabled' state, which transitions\n// to 'restoring'. The 'restoring' state can either transition back to 'disabled' or 'default'.\n\n// For non-iOS devices, we apply user-select: none to the pressed element instead to avoid possible\n// performance issues that arise from applying and removing user-select: none to the entire page\n// (see https://github.com/adobe/react-spectrum/issues/1609).\ntype State = 'default' | 'disabled' | 'restoring';\n\n// Note that state only matters here for iOS. Non-iOS gets user-select: none applied to the target element\n// rather than at the document level so we just need to apply/remove user-select: none for each pressed element individually\nlet state: State = 'default';\nlet savedUserSelect = '';\nlet modifiedElementMap = new WeakMap<Element, string>();\n\nexport function disableTextSelection(target?: Element) {\n  if (isIOS()) {\n    if (state === 'default') {\n      // eslint-disable-next-line no-restricted-globals\n      const documentObject = getOwnerDocument(target);\n      savedUserSelect = documentObject.documentElement.style.webkitUserSelect;\n      documentObject.documentElement.style.webkitUserSelect = 'none';\n    }\n\n    state = 'disabled';\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    // If not iOS, store the target's original user-select and change to user-select: none\n    // Ignore state since it doesn't apply for non iOS\n    modifiedElementMap.set(target, target.style.userSelect);\n    target.style.userSelect = 'none';\n  }\n}\n\nexport function restoreTextSelection(target?: Element) {\n  if (isIOS()) {\n    // If the state is already default, there's nothing to do.\n    // If it is restoring, then there's no need to queue a second restore.\n    if (state !== 'disabled') {\n      return;\n    }\n\n    state = 'restoring';\n\n    // There appears to be a delay on iOS where selection still might occur\n    // after pointer up, so wait a bit before removing user-select.\n    setTimeout(() => {\n      // Wait for any CSS transitions to complete so we don't recompute style\n      // for the whole page in the middle of the animation and cause jank.\n      runAfterTransition(() => {\n        // Avoid race conditions\n        if (state === 'restoring') {\n          // eslint-disable-next-line no-restricted-globals\n          const documentObject = getOwnerDocument(target);\n          if (documentObject.documentElement.style.webkitUserSelect === 'none') {\n            documentObject.documentElement.style.webkitUserSelect = savedUserSelect || '';\n          }\n\n          savedUserSelect = '';\n          state = 'default';\n        }\n      });\n    }, 300);\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    // If not iOS, restore the target's original user-select if any\n    // Ignore state since it doesn't apply for non iOS\n    if (target && modifiedElementMap.has(target)) {\n      let targetOldUserSelect = modifiedElementMap.get(target) as string;\n\n      if (target.style.userSelect === 'none') {\n        target.style.userSelect = targetOldUserSelect;\n      }\n\n      if (target.getAttribute('style') === '') {\n        target.removeAttribute('style');\n      }\n      modifiedElementMap.delete(target);\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {PressProps} from './usePress';\nimport React, {MutableRefObject} from 'react';\n\ninterface IPressResponderContext extends PressProps {\n  register(): void,\n  ref?: MutableRefObject<FocusableElement>\n}\n\nexport const PressResponderContext = React.createContext<IPressResponderContext>({register: () => {}});\nPressResponderContext.displayName = 'PressResponderContext';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/**\n * Calls all functions in the order they were chained with the same arguments.\n */\nexport function chain(...callbacks: any[]): (...args: any[]) => void {\n  return (...args: any[]) => {\n    for (let callback of callbacks) {\n      if (typeof callback === 'function') {\n        callback(...args);\n      }\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCallback, useEffect, useRef, useState} from 'react';\nimport {useLayoutEffect} from './useLayoutEffect';\nimport {useSSRSafeId} from '@react-aria/ssr';\nimport {useValueEffect} from './';\n\n// copied from SSRProvider.tsx to reduce exports, if needed again, consider sharing\nlet canUseDOM = Boolean(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nlet idsUpdaterMap: Map<string, (v: string) => void> = new Map();\n\n/**\n * If a default is not provided, generate an id.\n * @param defaultId - Default component id.\n */\nexport function useId(defaultId?: string): string {\n  let [value, setValue] = useState(defaultId);\n  let nextId = useRef(null);\n\n  let res = useSSRSafeId(value);\n\n  let updateValue = useCallback((val) => {\n    nextId.current = val;\n  }, []);\n\n  if (canUseDOM) {\n    idsUpdaterMap.set(res, updateValue);\n  }\n\n  useLayoutEffect(() => {\n    let r = res;\n    return () => {\n      idsUpdaterMap.delete(r);\n    };\n  }, [res]);\n\n  // This cannot cause an infinite loop because the ref is updated first.\n  // eslint-disable-next-line\n  useEffect(() => {\n    let newId = nextId.current;\n    if (newId) {\n      nextId.current = null;\n      setValue(newId);\n    }\n  });\n\n  return res;\n}\n\n/**\n * Merges two ids.\n * Different ids will trigger a side-effect and re-render components hooked up with `useId`.\n */\nexport function mergeIds(idA: string, idB: string): string {\n  if (idA === idB) {\n    return idA;\n  }\n\n  let setIdA = idsUpdaterMap.get(idA);\n  if (setIdA) {\n    setIdA(idB);\n    return idB;\n  }\n\n  let setIdB = idsUpdaterMap.get(idB);\n  if (setIdB) {\n    setIdB(idA);\n    return idA;\n  }\n\n  return idB;\n}\n\n/**\n * Used to generate an id, and after render, check if that id is rendered so we know\n * if we can use it in places such as labelledby.\n * @param depArray - When to recalculate if the id is in the DOM.\n */\nexport function useSlotId(depArray: ReadonlyArray<any> = []): string {\n  let id = useId();\n  let [resolvedId, setResolvedId] = useValueEffect(id);\n  let updateId = useCallback(() => {\n    setResolvedId(function *() {\n      yield id;\n\n      yield document.getElementById(id) ? id : undefined;\n    });\n  }, [id, setResolvedId]);\n\n  useLayoutEffect(updateId, [id, updateId, ...depArray]);\n\n  return resolvedId;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {chain} from './chain';\nimport clsx from 'clsx';\nimport {mergeIds} from './useId';\n\ninterface Props {\n  [key: string]: any\n}\n\ntype PropsArg = Props | null | undefined;\n\n// taken from: https://stackoverflow.com/questions/51603250/typescript-3-parameter-list-intersection-type/51604379#51604379\ntype TupleTypes<T> = { [P in keyof T]: T[P] } extends { [key: number]: infer V } ? NullToObject<V> : never;\ntype NullToObject<T> = T extends (null | undefined) ? {} : T;\n// eslint-disable-next-line no-undef, @typescript-eslint/no-unused-vars\ntype UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends ((k: infer I) => void) ? I : never;\n\n/**\n * Merges multiple props objects together. Event handlers are chained,\n * classNames are combined, and ids are deduplicated - different ids\n * will trigger a side-effect and re-render components hooked up with `useId`.\n * For all other props, the last prop object overrides all previous ones.\n * @param args - Multiple sets of props to merge together.\n */\nexport function mergeProps<T extends PropsArg[]>(...args: T): UnionToIntersection<TupleTypes<T>> {\n  // Start with a base clone of the first argument. This is a lot faster than starting\n  // with an empty object and adding properties as we go.\n  let result: Props = {...args[0]};\n  for (let i = 1; i < args.length; i++) {\n    let props = args[i];\n    for (let key in props) {\n      let a = result[key];\n      let b = props[key];\n\n      // Chain events\n      if (\n        typeof a === 'function' &&\n        typeof b === 'function' &&\n        // This is a lot faster than a regex.\n        key[0] === 'o' &&\n        key[1] === 'n' &&\n        key.charCodeAt(2) >= /* 'A' */ 65 &&\n        key.charCodeAt(2) <= /* 'Z' */ 90\n      ) {\n        result[key] = chain(a, b);\n\n        // Merge classnames, sometimes classNames are empty string which eval to false, so we just need to do a type check\n      } else if (\n        (key === 'className' || key === 'UNSAFE_className') &&\n        typeof a === 'string' &&\n        typeof b === 'string'\n      ) {\n        result[key] = clsx(a, b);\n      } else if (key === 'id' && a && b) {\n        result.id = mergeIds(a, b);\n        // Override others\n      } else {\n        result[key] = b !== undefined ? b : a;\n      }\n    }\n  }\n\n  return result as UnionToIntersection<TupleTypes<T>>;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React from 'react';\n\n// During SSR, React emits a warning when calling useLayoutEffect.\n// Since neither useLayoutEffect nor useEffect run on the server,\n// we can suppress this by replace it with a noop on the server.\nexport const useLayoutEffect = typeof document !== 'undefined'\n  ? React.useLayoutEffect\n  : () => {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {MutableRefObject, RefObject} from 'react';\nimport {useLayoutEffect} from './';\n\ninterface ContextValue<T> {\n  ref?: MutableRefObject<T | null>\n}\n\n// Syncs ref from context with ref passed to hook\nexport function useSyncRef<T>(context?: ContextValue<T> | null, ref?: RefObject<T>) {\n  useLayoutEffect(() => {\n    if (context && context.ref && ref) {\n      context.ref.current = ref.current;\n      return () => {\n        if (context.ref) {\n          context.ref.current = null;\n        }\n      };\n    }\n  });\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCallback, useEffect, useRef} from 'react';\n\ninterface GlobalListeners {\n  addGlobalListener<K extends keyof DocumentEventMap>(el: EventTarget, type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void,\n  addGlobalListener(el: EventTarget, type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void,\n  removeGlobalListener<K extends keyof DocumentEventMap>(el: EventTarget, type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void,\n  removeGlobalListener(el: EventTarget, type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void,\n  removeAllGlobalListeners(): void\n}\n\nexport function useGlobalListeners(): GlobalListeners {\n  let globalListeners = useRef(new Map());\n  let addGlobalListener = useCallback((eventTarget, type, listener, options) => {\n    // Make sure we remove the listener after it is called with the `once` option.\n    let fn = options?.once ? (...args) => {\n      globalListeners.current.delete(listener);\n      listener(...args);\n    } : listener;\n    globalListeners.current.set(listener, {type, eventTarget, fn, options});\n    eventTarget.addEventListener(type, listener, options);\n  }, []);\n  let removeGlobalListener = useCallback((eventTarget, type, listener, options) => {\n    let fn = globalListeners.current.get(listener)?.fn || listener;\n    eventTarget.removeEventListener(type, fn, options);\n    globalListeners.current.delete(listener);\n  }, []);\n  let removeAllGlobalListeners = useCallback(() => {\n    globalListeners.current.forEach((value, key) => {\n      removeGlobalListener(value.eventTarget, value.type, key, value.options);\n    });\n  }, [removeGlobalListener]);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return removeAllGlobalListeners;\n  }, [removeAllGlobalListeners]);\n\n  return {addGlobalListener, removeGlobalListener, removeAllGlobalListeners};\n}\n","/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCallback, useRef} from 'react';\nimport {useLayoutEffect} from './useLayoutEffect';\n\nexport function useEffectEvent<T extends Function>(fn?: T): T {\n  const ref = useRef<T | null | undefined>(null);\n  useLayoutEffect(() => {\n    ref.current = fn;\n  }, [fn]);\n  // @ts-ignore\n  return useCallback<T>((...args) => {\n    const f = ref.current!;\n    return f?.(...args);\n  }, []);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\n\n// This is a polyfill for element.focus({preventScroll: true});\n// Currently necessary for Safari and old Edge:\n// https://caniuse.com/#feat=mdn-api_htmlelement_focus_preventscroll_option\n// See https://bugs.webkit.org/show_bug.cgi?id=178583\n//\n\n// Original licensing for the following methods can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/calvellido/focus-options-polyfill\n\ninterface ScrollableElement {\n  element: HTMLElement,\n  scrollTop: number,\n  scrollLeft: number\n}\n\nexport function focusWithoutScrolling(element: FocusableElement) {\n  if (supportsPreventScroll()) {\n    element.focus({preventScroll: true});\n  } else {\n    let scrollableElements = getScrollableElements(element);\n    element.focus();\n    restoreScrollPosition(scrollableElements);\n  }\n}\n\nlet supportsPreventScrollCached: boolean | null = null;\nfunction supportsPreventScroll() {\n  if (supportsPreventScrollCached == null) {\n    supportsPreventScrollCached = false;\n    try {\n      let focusElem = document.createElement('div');\n      focusElem.focus({\n        get preventScroll() {\n          supportsPreventScrollCached = true;\n          return true;\n        }\n      });\n    } catch (e) {\n      // Ignore\n    }\n  }\n\n  return supportsPreventScrollCached;\n}\n\nfunction getScrollableElements(element: FocusableElement): ScrollableElement[] {\n  let parent = element.parentNode;\n  let scrollableElements: ScrollableElement[] = [];\n  let rootScrollingElement = document.scrollingElement || document.documentElement;\n\n  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {\n    if (\n      parent.offsetHeight < parent.scrollHeight ||\n      parent.offsetWidth < parent.scrollWidth\n    ) {\n      scrollableElements.push({\n        element: parent,\n        scrollTop: parent.scrollTop,\n        scrollLeft: parent.scrollLeft\n      });\n    }\n    parent = parent.parentNode;\n  }\n\n  if (rootScrollingElement instanceof HTMLElement) {\n    scrollableElements.push({\n      element: rootScrollingElement,\n      scrollTop: rootScrollingElement.scrollTop,\n      scrollLeft: rootScrollingElement.scrollLeft\n    });\n  }\n\n  return scrollableElements;\n}\n\nfunction restoreScrollPosition(scrollableElements: ScrollableElement[]) {\n  for (let {element, scrollTop, scrollLeft} of scrollableElements) {\n    element.scrollTop = scrollTop;\n    element.scrollLeft = scrollLeft;\n  }\n}\n","/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {focusWithoutScrolling, isMac, isWebKit} from './index';\nimport {Href, LinkDOMProps, RouterOptions} from '@react-types/shared';\nimport {isFirefox, isIPad} from './platform';\nimport React, {createContext, ReactNode, useContext, useMemo} from 'react';\n\ninterface Router {\n  isNative: boolean,\n  open: (target: Element, modifiers: Modifiers, href: Href, routerOptions: RouterOptions | undefined) => void,\n  useHref: (href: Href) => string\n}\n\nconst RouterContext = createContext<Router>({\n  isNative: true,\n  open: openSyntheticLink,\n  useHref: (href) => href\n});\n\ninterface RouterProviderProps {\n  navigate: (path: Href, routerOptions: RouterOptions | undefined) => void,\n  useHref?: (href: Href) => string,\n  children: ReactNode\n}\n\n/**\n * A RouterProvider accepts a `navigate` function from a framework or client side router,\n * and provides it to all nested React Aria links to enable client side navigation.\n */\nexport function RouterProvider(props: RouterProviderProps) {\n  let {children, navigate, useHref} = props;\n\n  let ctx = useMemo(() => ({\n    isNative: false,\n    open: (target: Element, modifiers: Modifiers, href: Href, routerOptions: RouterOptions | undefined) => {\n      getSyntheticLink(target, link => {\n        if (shouldClientNavigate(link, modifiers)) {\n          navigate(href, routerOptions);\n        } else {\n          openLink(link, modifiers);\n        }\n      });\n    },\n    useHref: useHref || ((href) => href)\n  }), [navigate, useHref]);\n\n  return (\n    <RouterContext.Provider value={ctx}>\n      {children}\n    </RouterContext.Provider>\n  );\n}\n\nexport function useRouter(): Router {\n  return useContext(RouterContext);\n}\n\ninterface Modifiers {\n  metaKey?: boolean,\n  ctrlKey?: boolean,\n  altKey?: boolean,\n  shiftKey?: boolean\n}\n\nexport function shouldClientNavigate(link: HTMLAnchorElement, modifiers: Modifiers) {\n  // Use getAttribute here instead of link.target. Firefox will default link.target to \"_parent\" when inside an iframe.\n  let target = link.getAttribute('target');\n  return (\n    (!target || target === '_self') &&\n    link.origin === location.origin &&\n    !link.hasAttribute('download') &&\n    !modifiers.metaKey && // open in new tab (mac)\n    !modifiers.ctrlKey && // open in new tab (windows)\n    !modifiers.altKey && // download\n    !modifiers.shiftKey\n  );\n}\n\nexport function openLink(target: HTMLAnchorElement, modifiers: Modifiers, setOpening = true) {\n  let {metaKey, ctrlKey, altKey, shiftKey} = modifiers;\n\n  // Firefox does not recognize keyboard events as a user action by default, and the popup blocker\n  // will prevent links with target=\"_blank\" from opening. However, it does allow the event if the\n  // Command/Control key is held, which opens the link in a background tab. This seems like the best we can do.\n  // See https://bugzilla.mozilla.org/show_bug.cgi?id=257870 and https://bugzilla.mozilla.org/show_bug.cgi?id=746640.\n  if (isFirefox() && window.event?.type?.startsWith('key') && target.target === '_blank') {\n    if (isMac()) {\n      metaKey = true;\n    } else {\n      ctrlKey = true;\n    }\n  }\n\n  // WebKit does not support firing click events with modifier keys, but does support keyboard events.\n  // https://github.com/WebKit/WebKit/blob/c03d0ac6e6db178f90923a0a63080b5ca210d25f/Source/WebCore/html/HTMLAnchorElement.cpp#L184\n  let event = isWebKit() && isMac() && !isIPad() && process.env.NODE_ENV !== 'test'\n    // @ts-ignore - keyIdentifier is a non-standard property, but it's what webkit expects\n    ? new KeyboardEvent('keydown', {keyIdentifier: 'Enter', metaKey, ctrlKey, altKey, shiftKey})\n    : new MouseEvent('click', {metaKey, ctrlKey, altKey, shiftKey, bubbles: true, cancelable: true});\n  (openLink as any).isOpening = setOpening;\n  focusWithoutScrolling(target);\n  target.dispatchEvent(event);\n  (openLink as any).isOpening = false;\n}\n// https://github.com/parcel-bundler/parcel/issues/8724\n(openLink as any).isOpening = false;\n\nfunction getSyntheticLink(target: Element, open: (link: HTMLAnchorElement) => void) {\n  if (target instanceof HTMLAnchorElement) {\n    open(target);\n  } else if (target.hasAttribute('data-href')) {\n    let link = document.createElement('a');\n    link.href = target.getAttribute('data-href')!;\n    if (target.hasAttribute('data-target')) {\n      link.target = target.getAttribute('data-target')!;\n    }\n    if (target.hasAttribute('data-rel')) {\n      link.rel = target.getAttribute('data-rel')!;\n    }\n    if (target.hasAttribute('data-download')) {\n      link.download = target.getAttribute('data-download')!;\n    }\n    if (target.hasAttribute('data-ping')) {\n      link.ping = target.getAttribute('data-ping')!;\n    }\n    if (target.hasAttribute('data-referrer-policy')) {\n      link.referrerPolicy = target.getAttribute('data-referrer-policy')!;\n    }\n    target.appendChild(link);\n    open(link);\n    target.removeChild(link);\n  }\n}\n\nfunction openSyntheticLink(target: Element, modifiers: Modifiers) {\n  getSyntheticLink(target, link => openLink(link, modifiers));\n}\n\nexport function getSyntheticLinkProps(props: LinkDOMProps) {\n  return {\n    'data-href': props.href,\n    'data-target': props.target,\n    'data-rel': props.rel,\n    'data-download': props.download,\n    'data-ping': props.ping,\n    'data-referrer-policy': props.referrerPolicy\n  };\n}\n\nexport function useLinkProps(props: LinkDOMProps) {\n  let router = useRouter();\n  return {\n    href: props?.href ? router.useHref(props?.href) : undefined,\n    target: props?.target,\n    rel: props?.rel,\n    download: props?.download,\n    ping: props?.ping,\n    referrerPolicy: props?.referrerPolicy\n  };\n}\n","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isAndroid} from './platform';\n\n// Original licensing for the following method can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/blob/3c713d513195a53788b3f8bb4b70279d68b15bcc/packages/react-interactions/events/src/dom/shared/index.js#L74-L87\n\n// Keyboards, Assistive Technologies, and element.click() all produce a \"virtual\"\n// click event. This is a method of inferring such clicks. Every browser except\n// IE 11 only sets a zero value of \"detail\" for click events that are \"virtual\".\n// However, IE 11 uses a zero value for all click events. For IE 11 we rely on\n// the quirk that it produces click events that are of type PointerEvent, and\n// where only the \"virtual\" click lacks a pointerType field.\n\nexport function isVirtualClick(event: MouseEvent | PointerEvent): boolean {\n  // JAWS/NVDA with Firefox.\n  if ((event as any).mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n\n  // Android TalkBack's detail value varies depending on the event listener providing the event so we have specific logic here instead\n  // If pointerType is defined, event is from a click listener. For events from mousedown listener, detail === 0 is a sufficient check\n  // to detect TalkBack virtual clicks.\n  if (isAndroid() && (event as PointerEvent).pointerType) {\n    return event.type === 'click' && event.buttons === 1;\n  }\n\n  return event.detail === 0 && !(event as PointerEvent).pointerType;\n}\n\nexport function isVirtualPointerEvent(event: PointerEvent) {\n  // If the pointer size is zero, then we assume it's from a screen reader.\n  // Android TalkBack double tap will sometimes return a event with width and height of 1\n  // and pointerType === 'mouse' so we need to check for a specific combination of event attributes.\n  // Cannot use \"event.pressure === 0\" as the sole check due to Safari pointer events always returning pressure === 0\n  // instead of .5, see https://bugs.webkit.org/show_bug.cgi?id=206216. event.pointerType === 'mouse' is to distingush\n  // Talkback double tap from Windows Firefox touch screen press\n  return (\n    (!isAndroid() && event.width === 0 && event.height === 0) ||\n    (event.width === 1 &&\n      event.height === 1 &&\n      event.pressure === 0 &&\n      event.detail === 0 &&\n      event.pointerType === 'mouse'\n    )\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {chain, focusWithoutScrolling, getOwnerDocument, getOwnerWindow, isMac, isVirtualClick, isVirtualPointerEvent, mergeProps, openLink, useEffectEvent, useGlobalListeners, useSyncRef} from '@react-aria/utils';\nimport {disableTextSelection, restoreTextSelection} from './textSelection';\nimport {DOMAttributes, FocusableElement, PressEvent as IPressEvent, PointerType, PressEvents} from '@react-types/shared';\nimport {PressResponderContext} from './context';\nimport {RefObject, useContext, useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface PressProps extends PressEvents {\n  /** Whether the target is in a controlled press state (e.g. an overlay it triggers is open). */\n  isPressed?: boolean,\n  /** Whether the press events should be disabled. */\n  isDisabled?: boolean,\n  /** Whether the target should not receive focus on press. */\n  preventFocusOnPress?: boolean,\n  /**\n   * Whether press events should be canceled when the pointer leaves the target while pressed.\n   * By default, this is `false`, which means if the pointer returns back over the target while\n   * still pressed, onPressStart will be fired again. If set to `true`, the press is canceled\n   * when the pointer leaves the target and onPressStart will not be fired if the pointer returns.\n   */\n  shouldCancelOnPointerExit?: boolean,\n  /** Whether text selection should be enabled on the pressable element. */\n  allowTextSelectionOnPress?: boolean\n}\n\nexport interface PressHookProps extends PressProps {\n  /** A ref to the target element. */\n  ref?: RefObject<Element>\n}\n\ninterface PressState {\n  isPressed: boolean,\n  ignoreEmulatedMouseEvents: boolean,\n  ignoreClickAfterPress: boolean,\n  didFirePressStart: boolean,\n  isTriggeringEvent: boolean,\n  activePointerId: any,\n  target: FocusableElement | null,\n  isOverTarget: boolean,\n  pointerType: PointerType | null,\n  userSelect?: string,\n  metaKeyEvents?: Map<string, KeyboardEvent>\n}\n\ninterface EventBase {\n  currentTarget: EventTarget | null,\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean,\n  altKey: boolean\n}\n\nexport interface PressResult {\n  /** Whether the target is currently pressed. */\n  isPressed: boolean,\n  /** Props to spread on the target element. */\n  pressProps: DOMAttributes\n}\n\nfunction usePressResponderContext(props: PressHookProps): PressHookProps {\n  // Consume context from <PressResponder> and merge with props.\n  let context = useContext(PressResponderContext);\n  if (context) {\n    let {register, ...contextProps} = context;\n    props = mergeProps(contextProps, props) as PressHookProps;\n    register();\n  }\n  useSyncRef(context, props.ref);\n\n  return props;\n}\n\nclass PressEvent implements IPressEvent {\n  type: IPressEvent['type'];\n  pointerType: PointerType;\n  target: Element;\n  shiftKey: boolean;\n  ctrlKey: boolean;\n  metaKey: boolean;\n  altKey: boolean;\n  #shouldStopPropagation = true;\n\n  constructor(type: IPressEvent['type'], pointerType: PointerType, originalEvent: EventBase) {\n    this.type = type;\n    this.pointerType = pointerType;\n    this.target = originalEvent.currentTarget as Element;\n    this.shiftKey = originalEvent.shiftKey;\n    this.metaKey = originalEvent.metaKey;\n    this.ctrlKey = originalEvent.ctrlKey;\n    this.altKey = originalEvent.altKey;\n  }\n\n  continuePropagation() {\n    this.#shouldStopPropagation = false;\n  }\n\n  get shouldStopPropagation() {\n    return this.#shouldStopPropagation;\n  }\n}\n\nconst LINK_CLICKED = Symbol('linkClicked');\n\n/**\n * Handles press interactions across mouse, touch, keyboard, and screen readers.\n * It normalizes behavior across browsers and platforms, and handles many nuances\n * of dealing with pointer and keyboard events.\n */\nexport function usePress(props: PressHookProps): PressResult {\n  let {\n    onPress,\n    onPressChange,\n    onPressStart,\n    onPressEnd,\n    onPressUp,\n    isDisabled,\n    isPressed: isPressedProp,\n    preventFocusOnPress,\n    shouldCancelOnPointerExit,\n    allowTextSelectionOnPress,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref: _, // Removing `ref` from `domProps` because TypeScript is dumb\n    ...domProps\n  } = usePressResponderContext(props);\n\n  let [isPressed, setPressed] = useState(false);\n  let ref = useRef<PressState>({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    didFirePressStart: false,\n    isTriggeringEvent: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false,\n    pointerType: null\n  });\n\n  let {addGlobalListener, removeAllGlobalListeners} = useGlobalListeners();\n\n  let triggerPressStart = useEffectEvent((originalEvent: EventBase, pointerType: PointerType) => {\n    let state = ref.current;\n    if (isDisabled || state.didFirePressStart) {\n      return false;\n    }\n\n    let shouldStopPropagation = true;\n    state.isTriggeringEvent = true;\n    if (onPressStart) {\n      let event = new PressEvent('pressstart', pointerType, originalEvent);\n      onPressStart(event);\n      shouldStopPropagation = event.shouldStopPropagation;\n    }\n\n    if (onPressChange) {\n      onPressChange(true);\n    }\n\n    state.isTriggeringEvent = false;\n    state.didFirePressStart = true;\n    setPressed(true);\n    return shouldStopPropagation;\n  });\n\n  let triggerPressEnd = useEffectEvent((originalEvent: EventBase, pointerType: PointerType, wasPressed = true) => {\n    let state = ref.current;\n    if (!state.didFirePressStart) {\n      return false;\n    }\n\n    state.ignoreClickAfterPress = true;\n    state.didFirePressStart = false;\n    state.isTriggeringEvent = true;\n\n    let shouldStopPropagation = true;\n    if (onPressEnd) {\n      let event = new PressEvent('pressend', pointerType, originalEvent);\n      onPressEnd(event);\n      shouldStopPropagation = event.shouldStopPropagation;\n    }\n\n    if (onPressChange) {\n      onPressChange(false);\n    }\n\n    setPressed(false);\n\n    if (onPress && wasPressed && !isDisabled) {\n      let event = new PressEvent('press', pointerType, originalEvent);\n      onPress(event);\n      shouldStopPropagation &&= event.shouldStopPropagation;\n    }\n\n    state.isTriggeringEvent = false;\n    return shouldStopPropagation;\n  });\n\n  let triggerPressUp = useEffectEvent((originalEvent: EventBase, pointerType: PointerType) => {\n    let state = ref.current;\n    if (isDisabled) {\n      return false;\n    }\n\n    if (onPressUp) {\n      state.isTriggeringEvent = true;\n      let event = new PressEvent('pressup', pointerType, originalEvent);\n      onPressUp(event);\n      state.isTriggeringEvent = false;\n      return event.shouldStopPropagation;\n    }\n\n    return true;\n  });\n\n  let cancel = useEffectEvent((e: EventBase) => {\n    let state = ref.current;\n    if (state.isPressed && state.target) {\n      if (state.isOverTarget && state.pointerType != null) {\n        triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n      }\n      state.isPressed = false;\n      state.isOverTarget = false;\n      state.activePointerId = null;\n      state.pointerType = null;\n      removeAllGlobalListeners();\n      if (!allowTextSelectionOnPress) {\n        restoreTextSelection(state.target);\n      }\n    }\n  });\n\n  let cancelOnPointerExit = useEffectEvent((e: EventBase) => {\n    if (shouldCancelOnPointerExit) {\n      cancel(e);\n    }\n  });\n\n  let pressProps = useMemo(() => {\n    let state = ref.current;\n    let pressProps: DOMAttributes = {\n      onKeyDown(e) {\n        if (isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && e.currentTarget.contains(e.target as Element)) {\n          if (shouldPreventDefaultKeyboard(e.target as Element, e.key)) {\n            e.preventDefault();\n          }\n\n          // If the event is repeating, it may have started on a different element\n          // after which focus moved to the current element. Ignore these events and\n          // only handle the first key down event.\n          let shouldStopPropagation = true;\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget;\n            state.isPressed = true;\n            shouldStopPropagation = triggerPressStart(e, 'keyboard');\n\n            // Focus may move before the key up event, so register the event on the document\n            // instead of the same element where the key down event occurred. Make it capturing so that it will trigger\n            // before stopPropagation from useKeyboard on a child element may happen and thus we can still call triggerPress for the parent element.\n            let originalTarget = e.currentTarget;\n            let pressUp = (e) => {\n              if (isValidKeyboardEvent(e, originalTarget) && !e.repeat && originalTarget.contains(e.target as Element) && state.target) {\n                triggerPressUp(createEvent(state.target, e), 'keyboard');\n              }\n            };\n\n            addGlobalListener(getOwnerDocument(e.currentTarget), 'keyup', chain(pressUp, onKeyUp), true);\n          }\n\n          if (shouldStopPropagation) {\n            e.stopPropagation();\n          }\n\n          // Keep track of the keydown events that occur while the Meta (e.g. Command) key is held.\n          // macOS has a bug where keyup events are not fired while the Meta key is down.\n          // When the Meta key itself is released we will get an event for that, and we'll act as if\n          // all of these other keys were released as well.\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1393524\n          // https://bugs.webkit.org/show_bug.cgi?id=55291\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=1299553\n          if (e.metaKey && isMac()) {\n            state.metaKeyEvents?.set(e.key, e.nativeEvent);\n          }\n        } else if (e.key === 'Meta') {\n          state.metaKeyEvents = new Map();\n        }\n      },\n      onClick(e) {\n        if (e && !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (e && e.button === 0 && !state.isTriggeringEvent && !(openLink as any).isOpening) {\n          let shouldStopPropagation = true;\n          if (isDisabled) {\n            e.preventDefault();\n          }\n\n          // If triggered from a screen reader or by using element.click(),\n          // trigger as if it were a keyboard click.\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && !state.isPressed && (state.pointerType === 'virtual' || isVirtualClick(e.nativeEvent))) {\n            // Ensure the element receives focus (VoiceOver on iOS does not do this)\n            if (!isDisabled && !preventFocusOnPress) {\n              focusWithoutScrolling(e.currentTarget);\n            }\n\n            let stopPressStart = triggerPressStart(e, 'virtual');\n            let stopPressUp = triggerPressUp(e, 'virtual');\n            let stopPressEnd = triggerPressEnd(e, 'virtual');\n            shouldStopPropagation = stopPressStart && stopPressUp && stopPressEnd;\n          }\n\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n          if (shouldStopPropagation) {\n            e.stopPropagation();\n          }\n        }\n      }\n    };\n\n    let onKeyUp = (e: KeyboardEvent) => {\n      if (state.isPressed && state.target && isValidKeyboardEvent(e, state.target)) {\n        if (shouldPreventDefaultKeyboard(e.target as Element, e.key)) {\n          e.preventDefault();\n        }\n\n        let target = e.target as Element;\n        triggerPressEnd(createEvent(state.target, e), 'keyboard', state.target.contains(target));\n        removeAllGlobalListeners();\n\n        // If a link was triggered with a key other than Enter, open the URL ourselves.\n        // This means the link has a role override, and the default browser behavior\n        // only applies when using the Enter key.\n        if (e.key !== 'Enter' && isHTMLAnchorLink(state.target) && state.target.contains(target) && !e[LINK_CLICKED]) {\n          // Store a hidden property on the event so we only trigger link click once,\n          // even if there are multiple usePress instances attached to the element.\n          e[LINK_CLICKED] = true;\n          openLink(state.target, e, false);\n        }\n\n        state.isPressed = false;\n        state.metaKeyEvents?.delete(e.key);\n      } else if (e.key === 'Meta' && state.metaKeyEvents?.size) {\n        // If we recorded keydown events that occurred while the Meta key was pressed,\n        // and those haven't received keyup events already, fire keyup events ourselves.\n        // See comment above for more info about the macOS bug causing this.\n        let events = state.metaKeyEvents;\n        state.metaKeyEvents = undefined;\n        for (let event of events.values()) {\n          state.target?.dispatchEvent(new KeyboardEvent('keyup', event));\n        }\n      }\n    };\n\n    if (typeof PointerEvent !== 'undefined') {\n      pressProps.onPointerDown = (e) => {\n        // Only handle left clicks, and ignore events that bubbled through portals.\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // iOS safari fires pointer events from VoiceOver with incorrect coordinates/target.\n        // Ignore and let the onClick handler take care of it instead.\n        // https://bugs.webkit.org/show_bug.cgi?id=222627\n        // https://bugs.webkit.org/show_bug.cgi?id=223202\n        if (isVirtualPointerEvent(e.nativeEvent)) {\n          state.pointerType = 'virtual';\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on pointer down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.currentTarget as Element)) {\n          e.preventDefault();\n        }\n\n        state.pointerType = e.pointerType;\n\n        let shouldStopPropagation = true;\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n\n          if (!isDisabled && !preventFocusOnPress) {\n            focusWithoutScrolling(e.currentTarget);\n          }\n\n          if (!allowTextSelectionOnPress) {\n            disableTextSelection(state.target);\n          }\n\n          shouldStopPropagation = triggerPressStart(e, state.pointerType);\n\n          addGlobalListener(getOwnerDocument(e.currentTarget), 'pointermove', onPointerMove, false);\n          addGlobalListener(getOwnerDocument(e.currentTarget), 'pointerup', onPointerUp, false);\n          addGlobalListener(getOwnerDocument(e.currentTarget), 'pointercancel', onPointerCancel, false);\n        }\n\n        if (shouldStopPropagation) {\n          e.stopPropagation();\n        }\n      };\n\n      pressProps.onMouseDown = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (e.button === 0) {\n          // Chrome and Firefox on touch Windows devices require mouse down events\n          // to be canceled in addition to pointer events, or an extra asynchronous\n          // focus event will be fired.\n          if (shouldPreventDefault(e.currentTarget as Element)) {\n            e.preventDefault();\n          }\n\n          e.stopPropagation();\n        }\n      };\n\n      pressProps.onPointerUp = (e) => {\n        // iOS fires pointerup with zero width and height, so check the pointerType recorded during pointerdown.\n        if (!e.currentTarget.contains(e.target as Element) || state.pointerType === 'virtual') {\n          return;\n        }\n\n        // Only handle left clicks\n        // Safari on iOS sometimes fires pointerup events, even\n        // when the touch isn't over the target, so double check.\n        if (e.button === 0 && isOverTarget(e, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType || e.pointerType);\n        }\n      };\n\n      // Safari on iOS < 13.2 does not implement pointerenter/pointerleave events correctly.\n      // Use pointer move events instead to implement our own hit testing.\n      // See https://bugs.webkit.org/show_bug.cgi?id=199803\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId !== state.activePointerId) {\n          return;\n        }\n\n        if (state.target && isOverTarget(e, state.target)) {\n          if (!state.isOverTarget && state.pointerType != null) {\n            state.isOverTarget = true;\n            triggerPressStart(createEvent(state.target, e), state.pointerType);\n          }\n        } else if (state.target && state.isOverTarget && state.pointerType != null) {\n          state.isOverTarget = false;\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          cancelOnPointerExit(e);\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0 && state.target) {\n          if (isOverTarget(e, state.target) && state.pointerType != null) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType);\n          } else if (state.isOverTarget && state.pointerType != null) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          }\n\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          state.pointerType = null;\n          removeAllGlobalListeners();\n          if (!allowTextSelectionOnPress) {\n            restoreTextSelection(state.target);\n          }\n        }\n      };\n\n      let onPointerCancel = (e: PointerEvent) => {\n        cancel(e);\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // Safari does not call onPointerCancel when a drag starts, whereas Chrome and Firefox do.\n        cancel(e);\n      };\n    } else {\n      pressProps.onMouseDown = (e) => {\n        // Only handle left clicks\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on mouse down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.currentTarget)) {\n          e.preventDefault();\n        }\n\n        if (state.ignoreEmulatedMouseEvents) {\n          e.stopPropagation();\n          return;\n        }\n\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n        state.pointerType = isVirtualClick(e.nativeEvent) ? 'virtual' : 'mouse';\n\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        let shouldStopPropagation = triggerPressStart(e, state.pointerType);\n        if (shouldStopPropagation) {\n          e.stopPropagation();\n        }\n\n        addGlobalListener(getOwnerDocument(e.currentTarget), 'mouseup', onMouseUp, false);\n      };\n\n      pressProps.onMouseEnter = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        let shouldStopPropagation = true;\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {\n          state.isOverTarget = true;\n          shouldStopPropagation = triggerPressStart(e, state.pointerType);\n        }\n\n        if (shouldStopPropagation) {\n          e.stopPropagation();\n        }\n      };\n\n      pressProps.onMouseLeave = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        let shouldStopPropagation = true;\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {\n          state.isOverTarget = false;\n          shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);\n          cancelOnPointerExit(e);\n        }\n\n        if (shouldStopPropagation) {\n          e.stopPropagation();\n        }\n      };\n\n      pressProps.onMouseUp = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) {\n          triggerPressUp(e, state.pointerType || 'mouse');\n        }\n      };\n\n      let onMouseUp = (e: MouseEvent) => {\n        // Only handle left clicks\n        if (e.button !== 0) {\n          return;\n        }\n\n        state.isPressed = false;\n        removeAllGlobalListeners();\n\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n\n        if (state.target && isOverTarget(e, state.target) && state.pointerType != null) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType);\n        } else if (state.target && state.isOverTarget && state.pointerType != null) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n        }\n\n        state.isOverTarget = false;\n      };\n\n      pressProps.onTouchStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        let touch = getTouchFromEvent(e.nativeEvent);\n        if (!touch) {\n          return;\n        }\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n        state.pointerType = 'touch';\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent default\n        // on the emulated mouse event and handle focusing the pressable element ourselves.\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        if (!allowTextSelectionOnPress) {\n          disableTextSelection(state.target);\n        }\n\n        let shouldStopPropagation = triggerPressStart(e, state.pointerType);\n        if (shouldStopPropagation) {\n          e.stopPropagation();\n        }\n\n        addGlobalListener(getOwnerWindow(e.currentTarget), 'scroll', onScroll, true);\n      };\n\n      pressProps.onTouchMove = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (!state.isPressed) {\n          e.stopPropagation();\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        let shouldStopPropagation = true;\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget && state.pointerType != null) {\n            state.isOverTarget = true;\n            shouldStopPropagation = triggerPressStart(e, state.pointerType);\n          }\n        } else if (state.isOverTarget && state.pointerType != null) {\n          state.isOverTarget = false;\n          shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);\n          cancelOnPointerExit(e);\n        }\n\n        if (shouldStopPropagation) {\n          e.stopPropagation();\n        }\n      };\n\n      pressProps.onTouchEnd = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (!state.isPressed) {\n          e.stopPropagation();\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        let shouldStopPropagation = true;\n        if (touch && isOverTarget(touch, e.currentTarget) && state.pointerType != null) {\n          triggerPressUp(e, state.pointerType);\n          shouldStopPropagation = triggerPressEnd(e, state.pointerType);\n        } else if (state.isOverTarget && state.pointerType != null) {\n          shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);\n        }\n\n        if (shouldStopPropagation) {\n          e.stopPropagation();\n        }\n\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.target && !allowTextSelectionOnPress) {\n          restoreTextSelection(state.target);\n        }\n        removeAllGlobalListeners();\n      };\n\n      pressProps.onTouchCancel = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed) {\n          cancel(e);\n        }\n      };\n\n      let onScroll = (e: Event) => {\n        if (state.isPressed && (e.target as Element).contains(state.target)) {\n          cancel({\n            currentTarget: state.target,\n            shiftKey: false,\n            ctrlKey: false,\n            metaKey: false,\n            altKey: false\n          });\n        }\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        cancel(e);\n      };\n    }\n\n    return pressProps;\n  }, [\n    addGlobalListener,\n    isDisabled,\n    preventFocusOnPress,\n    removeAllGlobalListeners,\n    allowTextSelectionOnPress,\n    cancel,\n    cancelOnPointerExit,\n    triggerPressEnd,\n    triggerPressStart,\n    triggerPressUp\n  ]);\n\n  // Remove user-select: none in case component unmounts immediately after pressStart\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      if (!allowTextSelectionOnPress) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        restoreTextSelection(ref.current.target ?? undefined);\n      }\n    };\n  }, [allowTextSelectionOnPress]);\n\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: mergeProps(domProps, pressProps)\n  };\n}\n\nfunction isHTMLAnchorLink(target: Element): target is HTMLAnchorElement {\n  return target.tagName === 'A' && target.hasAttribute('href');\n}\n\nfunction isValidKeyboardEvent(event: KeyboardEvent, currentTarget: Element): boolean {\n  const {key, code} = event;\n  const element = currentTarget as HTMLElement;\n  const role = element.getAttribute('role');\n  // Accessibility for keyboards. Space and Enter only.\n  // \"Spacebar\" is for IE 11\n  return (\n    (key === 'Enter' || key === ' ' || key === 'Spacebar' || code === 'Space') &&\n    !((element instanceof getOwnerWindow(element).HTMLInputElement && !isValidInputKey(element, key)) ||\n      element instanceof getOwnerWindow(element).HTMLTextAreaElement ||\n      element.isContentEditable) &&\n    // Links should only trigger with Enter key\n    !((role === 'link' || (!role && isHTMLAnchorLink(element))) && key !== 'Enter')\n  );\n}\n\nfunction getTouchFromEvent(event: TouchEvent): Touch | null {\n  const {targetTouches} = event;\n  if (targetTouches.length > 0) {\n    return targetTouches[0];\n  }\n  return null;\n}\n\nfunction getTouchById(\n  event: TouchEvent,\n  pointerId: null | number\n): null | Touch {\n  const changedTouches = event.changedTouches;\n  for (let i = 0; i < changedTouches.length; i++) {\n    const touch = changedTouches[i];\n    if (touch.identifier === pointerId) {\n      return touch;\n    }\n  }\n  return null;\n}\n\nfunction createEvent(target: FocusableElement, e: EventBase): EventBase {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey,\n    altKey: e.altKey\n  };\n}\n\ninterface Rect {\n  top: number,\n  right: number,\n  bottom: number,\n  left: number\n}\n\ninterface EventPoint {\n  clientX: number,\n  clientY: number,\n  width?: number,\n  height?: number,\n  radiusX?: number,\n  radiusY?: number\n}\n\nfunction getPointClientRect(point: EventPoint): Rect {\n  let offsetX = 0;\n  let offsetY = 0;\n  if (point.width !== undefined) {\n    offsetX = (point.width / 2);\n  } else if (point.radiusX !== undefined) {\n    offsetX = point.radiusX;\n  }\n  if (point.height !== undefined) {\n    offsetY = (point.height / 2);\n  } else if (point.radiusY !== undefined) {\n    offsetY = point.radiusY;\n  }\n\n  return {\n    top: point.clientY - offsetY,\n    right: point.clientX + offsetX,\n    bottom: point.clientY + offsetY,\n    left: point.clientX - offsetX\n  };\n}\n\nfunction areRectanglesOverlapping(a: Rect, b: Rect) {\n  // check if they cannot overlap on x axis\n  if (a.left > b.right || b.left > a.right) {\n    return false;\n  }\n  // check if they cannot overlap on y axis\n  if (a.top > b.bottom || b.top > a.bottom) {\n    return false;\n  }\n  return true;\n}\n\nfunction isOverTarget(point: EventPoint, target: Element) {\n  let rect = target.getBoundingClientRect();\n  let pointRect = getPointClientRect(point);\n  return areRectanglesOverlapping(rect, pointRect);\n}\n\nfunction shouldPreventDefault(target: Element) {\n  // We cannot prevent default if the target is a draggable element.\n  return !(target instanceof HTMLElement) || !target.hasAttribute('draggable');\n}\n\nfunction shouldPreventDefaultKeyboard(target: Element, key: string) {\n  if (target instanceof HTMLInputElement) {\n    return !isValidInputKey(target, key);\n  }\n\n  if (target instanceof HTMLButtonElement) {\n    return target.type !== 'submit' && target.type !== 'reset';\n  }\n\n  if (isHTMLAnchorLink(target)) {\n    return false;\n  }\n\n  return true;\n}\n\nconst nonTextInputTypes = new Set([\n  'checkbox',\n  'radio',\n  'range',\n  'color',\n  'file',\n  'image',\n  'button',\n  'submit',\n  'reset'\n]);\n\nfunction isValidInputKey(target: HTMLInputElement, key: string) {\n  // Only space should toggle checkboxes and radios, not enter.\n  return target.type === 'checkbox' || target.type === 'radio'\n    ? key === ' '\n    : nonTextInputTypes.has(target.type);\n}\n","import {\n  tv\n} from \"./chunk-N2KXC5ZE.mjs\";\nimport {\n  groupDataFocusVisibleClasses\n} from \"./chunk-XHQUSKIE.mjs\";\n\n// src/components/toggle.ts\nvar toggle = tv({\n  slots: {\n    base: \"group relative max-w-fit inline-flex items-center justify-start cursor-pointer touch-none tap-highlight-transparent\",\n    wrapper: [\n      \"px-1\",\n      \"relative\",\n      \"inline-flex\",\n      \"items-center\",\n      \"justify-start\",\n      \"flex-shrink-0\",\n      \"overflow-hidden\",\n      \"bg-default-200\",\n      \"rounded-full\",\n      ...groupDataFocusVisibleClasses\n    ],\n    thumb: [\n      \"z-10\",\n      \"flex\",\n      \"items-center\",\n      \"justify-center\",\n      \"bg-white\",\n      \"shadow-small\",\n      \"rounded-full\",\n      \"origin-right\"\n    ],\n    startContent: \"z-0 absolute left-1.5 rtl:right-1.5 rtl:left-[unset] text-current\",\n    endContent: \"z-0 absolute right-1.5 rtl:left-1.5 rtl:right-[unset] text-default-600\",\n    thumbIcon: \"text-black\",\n    label: \"relative text-foreground select-none\"\n  },\n  variants: {\n    color: {\n      default: {\n        wrapper: [\n          \"group-data-[selected=true]:bg-default-400\",\n          \"group-data-[selected=true]:text-default-foreground\"\n        ]\n      },\n      primary: {\n        wrapper: [\n          \"group-data-[selected=true]:bg-primary\",\n          \"group-data-[selected=true]:text-primary-foreground\"\n        ]\n      },\n      secondary: {\n        wrapper: [\n          \"group-data-[selected=true]:bg-secondary\",\n          \"group-data-[selected=true]:text-secondary-foreground\"\n        ]\n      },\n      success: {\n        wrapper: [\n          \"group-data-[selected=true]:bg-success\",\n          \"group-data-[selected=true]:text-success-foreground\"\n        ]\n      },\n      warning: {\n        wrapper: [\n          \"group-data-[selected=true]:bg-warning\",\n          \"group-data-[selected=true]:text-warning-foreground\"\n        ]\n      },\n      danger: {\n        wrapper: [\n          \"group-data-[selected=true]:bg-danger\",\n          \"data-[selected=true]:text-danger-foreground\"\n        ]\n      }\n    },\n    size: {\n      sm: {\n        wrapper: \"w-10 h-6 mr-2 rtl:ml-2 rtl:mr-[unset]\",\n        thumb: [\n          \"w-4 h-4 text-tiny\",\n          \"group-data-[selected=true]:ml-4 rtl:group-data-[selected=true]:ml-0 rtl:group-data-[selected=true]:mr-4\"\n        ],\n        endContent: \"text-tiny\",\n        startContent: \"text-tiny\",\n        label: \"text-small\"\n      },\n      md: {\n        wrapper: \"w-12 h-7 mr-2 rtl:ml-2 rtl:mr-[unset]\",\n        thumb: [\n          \"w-5 h-5 text-small\",\n          \"group-data-[selected=true]:ml-5 rtl:group-data-[selected=true]:ml-0 rtl:group-data-[selected=true]:mr-5\"\n        ],\n        endContent: \"text-small\",\n        startContent: \"text-small\",\n        label: \"text-medium\"\n      },\n      lg: {\n        wrapper: \"w-14 h-8 mr-2 rtl:ml-2 rtl:mr-[unset]\",\n        thumb: [\n          \"w-6 h-6 text-medium\",\n          \"group-data-[selected=true]:ml-6 rtl:group-data-[selected=true]:ml-0 rtl:group-data-[selected=true]:mr-6\"\n        ],\n        endContent: \"text-medium\",\n        startContent: \"text-medium\",\n        label: \"text-large\"\n      }\n    },\n    isDisabled: {\n      true: {\n        base: \"opacity-disabled pointer-events-none\"\n      }\n    },\n    disableAnimation: {\n      true: {\n        wrapper: \"transition-none\",\n        thumb: \"transition-none\"\n      },\n      false: {\n        wrapper: \"transition-background\",\n        thumb: \"transition-all\",\n        startContent: [\n          \"opacity-0\",\n          \"scale-50\",\n          \"transition-transform-opacity\",\n          \"group-data-[selected=true]:scale-100\",\n          \"group-data-[selected=true]:opacity-100\"\n        ],\n        endContent: [\n          \"opacity-100\",\n          \"transition-transform-opacity\",\n          \"group-data-[selected=true]:translate-x-3\",\n          \"group-data-[selected=true]:opacity-0\"\n        ]\n      }\n    }\n  },\n  defaultVariants: {\n    color: \"primary\",\n    size: \"md\",\n    isDisabled: false\n  },\n  compoundVariants: [\n    {\n      disableAnimation: false,\n      size: \"sm\",\n      class: {\n        thumb: [\"group-data-[pressed=true]:w-5\", \"group-data-[selected]:group-data-[pressed]:ml-3\"]\n      }\n    },\n    {\n      disableAnimation: false,\n      size: \"md\",\n      class: {\n        thumb: [\"group-data-[pressed=true]:w-6\", \"group-data-[selected]:group-data-[pressed]:ml-4\"]\n      }\n    },\n    {\n      disableAnimation: false,\n      size: \"lg\",\n      class: {\n        thumb: [\"group-data-[pressed=true]:w-7\", \"group-data-[selected]:group-data-[pressed]:ml-5\"]\n      }\n    }\n  ]\n});\n\nexport {\n  toggle\n};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaToggleProps} from '@react-types/checkbox';\nimport {filterDOMProps, mergeProps, useFormReset} from '@react-aria/utils';\nimport {InputHTMLAttributes, LabelHTMLAttributes} from 'react';\nimport {RefObject} from '@react-types/shared';\nimport {ToggleState} from '@react-stately/toggle';\nimport {useFocusable} from '@react-aria/focus';\nimport {usePress} from '@react-aria/interactions';\n\nexport interface ToggleAria {\n  /** Props to be spread on the label element. */\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>,\n  /** Props to be spread on the input element. */\n  inputProps: InputHTMLAttributes<HTMLInputElement>,\n  /** Whether the toggle is selected. */\n  isSelected: boolean,\n  /** Whether the toggle is in a pressed state. */\n  isPressed: boolean,\n  /** Whether the toggle is disabled. */\n  isDisabled: boolean,\n  /** Whether the toggle is read only. */\n  isReadOnly: boolean,\n  /** Whether the toggle is invalid. */\n  isInvalid: boolean\n}\n\n/**\n * Handles interactions for toggle elements, e.g. Checkboxes and Switches.\n */\nexport function useToggle(props: AriaToggleProps, state: ToggleState, ref: RefObject<HTMLInputElement | null>): ToggleAria {\n  let {\n    isDisabled = false,\n    isReadOnly = false,\n    value,\n    name,\n    children,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    validationState = 'valid',\n    isInvalid\n  } = props;\n\n  let onChange = (e) => {\n    // since we spread props on label, onChange will end up there as well as in here.\n    // so we have to stop propagation at the lowest level that we care about\n    e.stopPropagation();\n    state.setSelected(e.target.checked);\n  };\n\n  let hasChildren = children != null;\n  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n  if (!hasChildren && !hasAriaLabel) {\n    console.warn('If you do not provide children, you must specify an aria-label for accessibility');\n  }\n\n  // This handles focusing the input on pointer down, which Safari does not do by default.\n  let {pressProps, isPressed} = usePress({\n    isDisabled\n  });\n\n  // iOS does not toggle checkboxes if you drag off and back onto the label, so handle it ourselves.\n  let {pressProps: labelProps, isPressed: isLabelPressed} = usePress({\n    isDisabled: isDisabled || isReadOnly,\n    onPress() {\n      state.toggle();\n    }\n  });\n\n  let {focusableProps} = useFocusable(props, ref);\n  let interactions = mergeProps(pressProps, focusableProps);\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  useFormReset(ref, state.isSelected, state.setSelected);\n\n  return {\n    labelProps: mergeProps(labelProps, {onClick: e => e.preventDefault()}),\n    inputProps: mergeProps(domProps, {\n      'aria-invalid': isInvalid || validationState === 'invalid' || undefined,\n      'aria-errormessage': props['aria-errormessage'],\n      'aria-controls': props['aria-controls'],\n      'aria-readonly': isReadOnly || undefined,\n      onChange,\n      disabled: isDisabled,\n      ...(value == null ? {} : {value}),\n      name,\n      type: 'checkbox',\n      ...interactions\n    }),\n    isSelected: state.isSelected,\n    isPressed: isPressed || isLabelPressed,\n    isDisabled,\n    isReadOnly,\n    isInvalid: isInvalid || validationState === 'invalid'\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaSwitchProps} from '@react-types/switch';\nimport {InputHTMLAttributes, LabelHTMLAttributes, RefObject} from 'react';\nimport {ToggleState} from '@react-stately/toggle';\nimport {useToggle} from '@react-aria/toggle';\n\nexport interface SwitchAria {\n  /** Props for the label wrapper element. */\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>,\n  /** Props for the input element. */\n  inputProps: InputHTMLAttributes<HTMLInputElement>,\n  /** Whether the switch is selected. */\n  isSelected: boolean,\n  /** Whether the switch is in a pressed state. */\n  isPressed: boolean,\n  /** Whether the switch is disabled. */\n  isDisabled: boolean,\n  /** Whether the switch is read only. */\n  isReadOnly: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a switch component.\n * A switch is similar to a checkbox, but represents on/off values as opposed to selection.\n * @param props - Props for the switch.\n * @param state - State for the switch, as returned by `useToggleState`.\n * @param ref - Ref to the HTML input element.\n */\nexport function useSwitch(props: AriaSwitchProps, state: ToggleState, ref: RefObject<HTMLInputElement>): SwitchAria {\n  let {labelProps, inputProps, isSelected, isPressed, isDisabled, isReadOnly} = useToggle(props, state, ref);\n\n  return {\n    labelProps,\n    inputProps: {\n      ...inputProps,\n      role: 'switch',\n      checked: isSelected\n    },\n    isSelected,\n    isPressed,\n    isDisabled,\n    isReadOnly\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {getOwnerDocument, getOwnerWindow, isMac, isVirtualClick} from '@react-aria/utils';\nimport {useEffect, useState} from 'react';\nimport {useIsSSR} from '@react-aria/ssr';\n\nexport type Modality = 'keyboard' | 'pointer' | 'virtual';\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent | null;\ntype Handler = (modality: Modality, e: HandlerEvent) => void;\nexport type FocusVisibleHandler = (isFocusVisible: boolean) => void;\nexport interface FocusVisibleProps {\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\nexport interface FocusVisibleResult {\n  /** Whether keyboard focus is visible globally. */\n  isFocusVisible: boolean\n}\n\nlet currentModality: null | Modality = null;\nlet changeHandlers = new Set<Handler>();\ninterface GlobalListenerData {\n  focus: () => void\n}\nexport let hasSetupGlobalListeners = new Map<Window, GlobalListenerData>(); // We use a map here to support setting event listeners across multiple document objects.\nlet hasEventBeforeFocus = false;\nlet hasBlurredWindowRecently = false;\n\n// Only Tab or Esc keys will make focus visible on text input elements\nconst FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\n\nfunction triggerChangeHandlers(modality: Modality, e: HandlerEvent) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\n\n/**\n * Helper function to determine if a KeyboardEvent is unmodified and could make keyboard focus styles visible.\n */\nfunction isValidKey(e: KeyboardEvent) {\n  // Control and Shift keys trigger when navigating back to the tab with keyboard.\n  return !(e.metaKey || (!isMac() && e.altKey) || e.ctrlKey || e.key === 'Control' || e.key === 'Shift' || e.key === 'Meta');\n}\n\n\nfunction handleKeyboardEvent(e: KeyboardEvent) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = 'keyboard';\n    triggerChangeHandlers('keyboard', e);\n  }\n}\n\nfunction handlePointerEvent(e: PointerEvent | MouseEvent) {\n  currentModality = 'pointer';\n  if (e.type === 'mousedown' || e.type === 'pointerdown') {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers('pointer', e);\n  }\n}\n\nfunction handleClickEvent(e: MouseEvent) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = 'virtual';\n  }\n}\n\nfunction handleFocusEvent(e: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (e.target === window || e.target === document) {\n    return;\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to virtual modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    currentModality = 'virtual';\n    triggerChangeHandlers('virtual', e);\n  }\n\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\n\nfunction handleWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\n\n/**\n * Setup global event listeners to control when keyboard focus style should be visible.\n */\nfunction setupGlobalFocusEvents(element?: HTMLElement | null) {\n  if (typeof window === 'undefined' || hasSetupGlobalListeners.get(getOwnerWindow(element))) {\n    return;\n  }\n\n  const windowObject = getOwnerWindow(element);\n  const documentObject = getOwnerDocument(element);\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  let focus = windowObject.HTMLElement.prototype.focus;\n  windowObject.HTMLElement.prototype.focus = function () {\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments as unknown as [options?: FocusOptions | undefined]);\n  };\n\n  documentObject.addEventListener('keydown', handleKeyboardEvent, true);\n  documentObject.addEventListener('keyup', handleKeyboardEvent, true);\n  documentObject.addEventListener('click', handleClickEvent, true);\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  windowObject.addEventListener('focus', handleFocusEvent, true);\n  windowObject.addEventListener('blur', handleWindowBlur, false);\n\n  if (typeof PointerEvent !== 'undefined') {\n    documentObject.addEventListener('pointerdown', handlePointerEvent, true);\n    documentObject.addEventListener('pointermove', handlePointerEvent, true);\n    documentObject.addEventListener('pointerup', handlePointerEvent, true);\n  } else {\n    documentObject.addEventListener('mousedown', handlePointerEvent, true);\n    documentObject.addEventListener('mousemove', handlePointerEvent, true);\n    documentObject.addEventListener('mouseup', handlePointerEvent, true);\n  }\n\n  // Add unmount handler\n  windowObject.addEventListener('beforeunload', () => {\n    tearDownWindowFocusTracking(element);\n  }, {once: true});\n\n  hasSetupGlobalListeners.set(windowObject, {focus});\n}\n\nconst tearDownWindowFocusTracking = (element, loadListener?: () => void) => {\n  const windowObject = getOwnerWindow(element);\n  const documentObject = getOwnerDocument(element);\n  if (loadListener) {\n    documentObject.removeEventListener('DOMContentLoaded', loadListener);\n  }\n  if (!hasSetupGlobalListeners.has(windowObject)) {\n    return;\n  }\n  windowObject.HTMLElement.prototype.focus = hasSetupGlobalListeners.get(windowObject)!.focus;\n\n  documentObject.removeEventListener('keydown', handleKeyboardEvent, true);\n  documentObject.removeEventListener('keyup', handleKeyboardEvent, true);\n  documentObject.removeEventListener('click', handleClickEvent, true);\n  windowObject.removeEventListener('focus', handleFocusEvent, true);\n  windowObject.removeEventListener('blur', handleWindowBlur, false);\n\n  if (typeof PointerEvent !== 'undefined') {\n    documentObject.removeEventListener('pointerdown', handlePointerEvent, true);\n    documentObject.removeEventListener('pointermove', handlePointerEvent, true);\n    documentObject.removeEventListener('pointerup', handlePointerEvent, true);\n  } else {\n    documentObject.removeEventListener('mousedown', handlePointerEvent, true);\n    documentObject.removeEventListener('mousemove', handlePointerEvent, true);\n    documentObject.removeEventListener('mouseup', handlePointerEvent, true);\n  }\n\n  hasSetupGlobalListeners.delete(windowObject);\n};\n\n/**\n * EXPERIMENTAL\n * Adds a window (i.e. iframe) to the list of windows that are being tracked for focus visible.\n *\n * Sometimes apps render portions of their tree into an iframe. In this case, we cannot accurately track if the focus\n * is visible because we cannot see interactions inside the iframe. If you have this in your application's architecture,\n * then this function will attach event listeners inside the iframe. You should call `addWindowFocusTracking` with an\n * element from inside the window you wish to add. We'll retrieve the relevant elements based on that.\n * Note, you do not need to call this for the default window, as we call it for you.\n *\n * When you are ready to stop listening, but you do not wish to unmount the iframe, you may call the cleanup function\n * returned by `addWindowFocusTracking`. Otherwise, when you unmount the iframe, all listeners and state will be cleaned\n * up automatically for you.\n *\n * @param element @default document.body - The element provided will be used to get the window to add.\n * @returns A function to remove the event listeners and cleanup the state.\n */\nexport function addWindowFocusTracking(element?: HTMLElement | null): () => void {\n  const documentObject = getOwnerDocument(element);\n  let loadListener;\n  if (documentObject.readyState !== 'loading') {\n    setupGlobalFocusEvents(element);\n  } else {\n    loadListener = () => {\n      setupGlobalFocusEvents(element);\n    };\n    documentObject.addEventListener('DOMContentLoaded', loadListener);\n  }\n\n  return () => tearDownWindowFocusTracking(element, loadListener);\n}\n\n// Server-side rendering does not have the document object defined\n// eslint-disable-next-line no-restricted-globals\nif (typeof document !== 'undefined') {\n  addWindowFocusTracking();\n}\n\n/**\n * If true, keyboard focus is visible.\n */\nexport function isFocusVisible(): boolean {\n  return currentModality !== 'pointer';\n}\n\nexport function getInteractionModality(): Modality | null {\n  return currentModality;\n}\n\nexport function setInteractionModality(modality: Modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\n\n/**\n * Keeps state of the current modality.\n */\nexport function useInteractionModality(): Modality | null {\n  setupGlobalFocusEvents();\n\n  let [modality, setModality] = useState(currentModality);\n  useEffect(() => {\n    let handler = () => {\n      setModality(currentModality);\n    };\n\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, []);\n\n  return useIsSSR() ? null : modality;\n}\n\nconst nonTextInputTypes = new Set([\n  'checkbox',\n  'radio',\n  'range',\n  'color',\n  'file',\n  'image',\n  'button',\n  'submit',\n  'reset'\n]);\n\n/**\n * If this is attached to text input component, return if the event is a focus event (Tab/Escape keys pressed) so that\n * focus visible style can be properly set.\n */\nfunction isKeyboardFocusEvent(isTextInput: boolean, modality: Modality, e: HandlerEvent) {\n  const IHTMLInputElement = typeof window !== 'undefined' ? getOwnerWindow(e?.target as Element).HTMLInputElement : HTMLInputElement;\n  const IHTMLTextAreaElement = typeof window !== 'undefined' ? getOwnerWindow(e?.target as Element).HTMLTextAreaElement : HTMLTextAreaElement;\n  const IHTMLElement = typeof window !== 'undefined' ? getOwnerWindow(e?.target as Element).HTMLElement : HTMLElement;\n  const IKeyboardEvent = typeof window !== 'undefined' ? getOwnerWindow(e?.target as Element).KeyboardEvent : KeyboardEvent;\n\n  isTextInput = isTextInput ||\n    (e?.target instanceof IHTMLInputElement && !nonTextInputTypes.has(e?.target?.type)) ||\n    e?.target instanceof IHTMLTextAreaElement ||\n    (e?.target instanceof IHTMLElement && e?.target.isContentEditable);\n  return !(isTextInput && modality === 'keyboard' && e instanceof IKeyboardEvent && !FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\n\n/**\n * Manages focus visible state for the page, and subscribes individual components for updates.\n */\nexport function useFocusVisible(props: FocusVisibleProps = {}): FocusVisibleResult {\n  let {isTextInput, autoFocus} = props;\n  let [isFocusVisibleState, setFocusVisible] = useState(autoFocus || isFocusVisible());\n  useFocusVisibleListener((isFocusVisible) => {\n    setFocusVisible(isFocusVisible);\n  }, [isTextInput], {isTextInput});\n\n  return {isFocusVisible: isFocusVisibleState};\n}\n\n/**\n * Listens for trigger change and reports if focus is visible (i.e., modality is not pointer).\n */\nexport function useFocusVisibleListener(fn: FocusVisibleHandler, deps: ReadonlyArray<any>, opts?: {isTextInput?: boolean}): void {\n  setupGlobalFocusEvents();\n\n  useEffect(() => {\n    let handler = (modality: Modality, e: HandlerEvent) => {\n      if (!isKeyboardFocusEvent(!!(opts?.isTextInput), modality, e)) {\n        return;\n      }\n      fn(isFocusVisible());\n    };\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusEvent as ReactFocusEvent, useCallback, useRef} from 'react';\nimport {useEffectEvent, useLayoutEffect} from '@react-aria/utils';\n\nexport class SyntheticFocusEvent<Target = Element> implements ReactFocusEvent<Target> {\n  nativeEvent: FocusEvent;\n  target: EventTarget & Target;\n  currentTarget: EventTarget & Target;\n  relatedTarget: Element;\n  bubbles: boolean;\n  cancelable: boolean;\n  defaultPrevented: boolean;\n  eventPhase: number;\n  isTrusted: boolean;\n  timeStamp: number;\n  type: string;\n\n  constructor(type: string, nativeEvent: FocusEvent) {\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEvent.target as EventTarget & Target;\n    this.currentTarget = nativeEvent.currentTarget as EventTarget & Target;\n    this.relatedTarget = nativeEvent.relatedTarget as Element;\n    this.bubbles = nativeEvent.bubbles;\n    this.cancelable = nativeEvent.cancelable;\n    this.defaultPrevented = nativeEvent.defaultPrevented;\n    this.eventPhase = nativeEvent.eventPhase;\n    this.isTrusted = nativeEvent.isTrusted;\n    this.timeStamp = nativeEvent.timeStamp;\n    this.type = type;\n  }\n\n  isDefaultPrevented(): boolean {\n    return this.nativeEvent.defaultPrevented;\n  }\n\n  preventDefault(): void {\n    this.defaultPrevented = true;\n    this.nativeEvent.preventDefault();\n  }\n\n  stopPropagation(): void {\n    this.nativeEvent.stopPropagation();\n    this.isPropagationStopped = () => true;\n  }\n\n  isPropagationStopped(): boolean {\n    return false;\n  }\n\n  persist() {}\n}\n\nexport function useSyntheticBlurEvent<Target = Element>(onBlur: (e: ReactFocusEvent<Target>) => void) {\n  let stateRef = useRef({\n    isFocused: false,\n    observer: null as MutationObserver | null\n  });\n\n  // Clean up MutationObserver on unmount. See below.\n  // eslint-disable-next-line arrow-body-style\n  useLayoutEffect(() => {\n    const state = stateRef.current;\n    return () => {\n      if (state.observer) {\n        state.observer.disconnect();\n        state.observer = null;\n      }\n    };\n  }, []);\n\n  let dispatchBlur = useEffectEvent((e: SyntheticFocusEvent<Target>) => {\n    onBlur?.(e);\n  });\n\n  // This function is called during a React onFocus event.\n  return useCallback((e: ReactFocusEvent<Target>) => {\n    // React does not fire onBlur when an element is disabled. https://github.com/facebook/react/issues/9142\n    // Most browsers fire a native focusout event in this case, except for Firefox. In that case, we use a\n    // MutationObserver to watch for the disabled attribute, and dispatch these events ourselves.\n    // For browsers that do, focusout fires before the MutationObserver, so onBlur should not fire twice.\n    if (\n      e.target instanceof HTMLButtonElement ||\n      e.target instanceof HTMLInputElement ||\n      e.target instanceof HTMLTextAreaElement ||\n      e.target instanceof HTMLSelectElement\n    ) {\n      stateRef.current.isFocused = true;\n\n      let target = e.target;\n      let onBlurHandler: EventListenerOrEventListenerObject | null = (e) => {\n        stateRef.current.isFocused = false;\n\n        if (target.disabled) {\n          // For backward compatibility, dispatch a (fake) React synthetic event.\n          dispatchBlur(new SyntheticFocusEvent('blur', e as FocusEvent));\n        }\n\n        // We no longer need the MutationObserver once the target is blurred.\n        if (stateRef.current.observer) {\n          stateRef.current.observer.disconnect();\n          stateRef.current.observer = null;\n        }\n      };\n\n      target.addEventListener('focusout', onBlurHandler, {once: true});\n\n      stateRef.current.observer = new MutationObserver(() => {\n        if (stateRef.current.isFocused && target.disabled) {\n          stateRef.current.observer?.disconnect();\n          let relatedTargetEl = target === document.activeElement ? null : document.activeElement;\n          target.dispatchEvent(new FocusEvent('blur', {relatedTarget: relatedTargetEl}));\n          target.dispatchEvent(new FocusEvent('focusout', {bubbles: true, relatedTarget: relatedTargetEl}));\n        }\n      });\n\n      stateRef.current.observer.observe(target, {attributes: true, attributeFilter: ['disabled']});\n    }\n  }, [dispatchBlur]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes, FocusableElement, FocusEvents} from '@react-types/shared';\nimport {FocusEvent, useCallback} from 'react';\nimport {getOwnerDocument} from '@react-aria/utils';\nimport {useSyntheticBlurEvent} from './utils';\n\nexport interface FocusProps<Target = FocusableElement> extends FocusEvents<Target> {\n  /** Whether the focus events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface FocusResult<Target = FocusableElement> {\n  /** Props to spread onto the target element. */\n  focusProps: DOMAttributes<Target>\n}\n\n/**\n * Handles focus events for the immediate target.\n * Focus events on child elements will be ignored.\n */\nexport function useFocus<Target extends FocusableElement = FocusableElement>(props: FocusProps<Target>): FocusResult<Target> {\n  let {\n    isDisabled,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    onFocusChange\n  } = props;\n\n  const onBlur: FocusProps<Target>['onBlur'] = useCallback((e: FocusEvent<Target>) => {\n    if (e.target === e.currentTarget) {\n      if (onBlurProp) {\n        onBlurProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(false);\n      }\n\n      return true;\n    }\n  }, [onBlurProp, onFocusChange]);\n\n\n  const onSyntheticFocus = useSyntheticBlurEvent<Target>(onBlur);\n\n  const onFocus: FocusProps<Target>['onFocus'] = useCallback((e: FocusEvent<Target>) => {\n    // Double check that document.activeElement actually matches e.target in case a previously chained\n    // focus handler already moved focus somewhere else.\n\n    const ownerDocument = getOwnerDocument(e.target);\n\n    if (e.target === e.currentTarget && ownerDocument.activeElement === e.target) {\n      if (onFocusProp) {\n        onFocusProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(true);\n      }\n\n      onSyntheticFocus(e);\n    }\n  }, [onFocusChange, onFocusProp, onSyntheticFocus]);\n\n  return {\n    focusProps: {\n      onFocus: (!isDisabled && (onFocusProp || onFocusChange || onBlurProp)) ? onFocus : undefined,\n      onBlur: (!isDisabled && (onBlurProp || onFocusChange)) ? onBlur : undefined\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {FocusEvent, useCallback, useRef} from 'react';\nimport {useSyntheticBlurEvent} from './utils';\n\nexport interface FocusWithinProps {\n  /** Whether the focus within events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when the target element or a descendant receives focus. */\n  onFocusWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the target element and all descendants lose focus. */\n  onBlurWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the the focus within state changes. */\n  onFocusWithinChange?: (isFocusWithin: boolean) => void\n}\n\nexport interface FocusWithinResult {\n  /** Props to spread onto the target element. */\n  focusWithinProps: DOMAttributes\n}\n\n/**\n * Handles focus events for the target and its descendants.\n */\nexport function useFocusWithin(props: FocusWithinProps): FocusWithinResult {\n  let {\n    isDisabled,\n    onBlurWithin,\n    onFocusWithin,\n    onFocusWithinChange\n  } = props;\n  let state = useRef({\n    isFocusWithin: false\n  });\n\n  let onBlur = useCallback((e: FocusEvent) => {\n    // We don't want to trigger onBlurWithin and then immediately onFocusWithin again\n    // when moving focus inside the element. Only trigger if the currentTarget doesn't\n    // include the relatedTarget (where focus is moving).\n    if (state.current.isFocusWithin && !(e.currentTarget as Element).contains(e.relatedTarget as Element)) {\n      state.current.isFocusWithin = false;\n\n      if (onBlurWithin) {\n        onBlurWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(false);\n      }\n    }\n  }, [onBlurWithin, onFocusWithinChange, state]);\n\n  let onSyntheticFocus = useSyntheticBlurEvent(onBlur);\n  let onFocus = useCallback((e: FocusEvent) => {\n    // Double check that document.activeElement actually matches e.target in case a previously chained\n    // focus handler already moved focus somewhere else.\n    if (!state.current.isFocusWithin && document.activeElement === e.target) {\n      if (onFocusWithin) {\n        onFocusWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(true);\n      }\n\n      state.current.isFocusWithin = true;\n      onSyntheticFocus(e);\n    }\n  }, [onFocusWithin, onFocusWithinChange, onSyntheticFocus]);\n\n  if (isDisabled) {\n    return {\n      focusWithinProps: {\n        // These should not have been null, that would conflict in mergeProps\n        onFocus: undefined,\n        onBlur: undefined\n      }\n    };\n  }\n\n  return {\n    focusWithinProps: {\n      onFocus,\n      onBlur\n    }\n  };\n}\n","import {DOMAttributes} from '@react-types/shared';\nimport {isFocusVisible, useFocus, useFocusVisibleListener, useFocusWithin} from '@react-aria/interactions';\nimport {useCallback, useRef, useState} from 'react';\n\nexport interface AriaFocusRingProps {\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default 'false'\n   */\n  within?: boolean,\n\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\nexport interface FocusRingAria {\n  /** Whether the element is currently focused. */\n  isFocused: boolean,\n\n  /** Whether keyboard focus should be visible. */\n  isFocusVisible: boolean,\n\n  /** Props to apply to the container element with the focus ring. */\n  focusProps: DOMAttributes\n}\n\n/**\n * Determines whether a focus ring should be shown to indicate keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function useFocusRing(props: AriaFocusRingProps = {}): FocusRingAria {\n  let {\n    autoFocus = false,\n    isTextInput,\n    within\n  } = props;\n  let state = useRef({\n    isFocused: false,\n    isFocusVisible: autoFocus || isFocusVisible()\n  });\n  let [isFocused, setFocused] = useState(false);\n  let [isFocusVisibleState, setFocusVisible] = useState(() => state.current.isFocused && state.current.isFocusVisible);\n\n  let updateState = useCallback(() => setFocusVisible(state.current.isFocused && state.current.isFocusVisible), []);\n\n  let onFocusChange = useCallback(isFocused => {\n    state.current.isFocused = isFocused;\n    setFocused(isFocused);\n    updateState();\n  }, [updateState]);\n\n  useFocusVisibleListener((isFocusVisible) => {\n    state.current.isFocusVisible = isFocusVisible;\n    updateState();\n  }, [], {isTextInput});\n\n  let {focusProps} = useFocus({\n    isDisabled: within,\n    onFocusChange\n  });\n\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !within,\n    onFocusWithinChange: onFocusChange\n  });\n\n  return {\n    isFocused,\n    isFocusVisible: isFocusVisibleState,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\n","\"use client\";\n\n// src/use-switch.ts\nimport { useCallback, useId, useRef, useState } from \"react\";\nimport { mapPropsVariants, useProviderContext } from \"@nextui-org/system\";\nimport { mergeRefs } from \"@nextui-org/react-utils\";\nimport { useSafeLayoutEffect } from \"@nextui-org/use-safe-layout-effect\";\nimport { useHover, usePress } from \"@react-aria/interactions\";\nimport { toggle } from \"@nextui-org/theme\";\nimport { chain, mergeProps } from \"@react-aria/utils\";\nimport { clsx, dataAttr, objectToDeps } from \"@nextui-org/shared-utils\";\nimport { useSwitch as useReactAriaSwitch } from \"@react-aria/switch\";\nimport { useMemo } from \"react\";\nimport { useToggleState } from \"@react-stately/toggle\";\nimport { useFocusRing } from \"@react-aria/focus\";\nfunction useSwitch(originalProps = {}) {\n  var _a, _b;\n  const globalContext = useProviderContext();\n  const [props, variantProps] = mapPropsVariants(originalProps, toggle.variantKeys);\n  const {\n    ref,\n    as,\n    name,\n    value = \"\",\n    isReadOnly: isReadOnlyProp = false,\n    autoFocus = false,\n    startContent,\n    endContent,\n    defaultSelected,\n    isSelected: isSelectedProp,\n    children,\n    thumbIcon,\n    className,\n    classNames,\n    onChange,\n    onValueChange,\n    ...otherProps\n  } = props;\n  const Component = as || \"label\";\n  const domRef = useRef(null);\n  const inputRef = useRef(null);\n  const disableAnimation = (_b = (_a = originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;\n  const labelId = useId();\n  const ariaSwitchProps = useMemo(() => {\n    const ariaLabel = otherProps[\"aria-label\"] || typeof children === \"string\" ? children : void 0;\n    return {\n      name,\n      value,\n      children,\n      autoFocus,\n      defaultSelected,\n      isSelected: isSelectedProp,\n      isDisabled: !!originalProps.isDisabled,\n      isReadOnly: isReadOnlyProp,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": otherProps[\"aria-labelledby\"] || labelId,\n      onChange: onValueChange\n    };\n  }, [\n    value,\n    name,\n    labelId,\n    children,\n    autoFocus,\n    isReadOnlyProp,\n    isSelectedProp,\n    defaultSelected,\n    originalProps.isDisabled,\n    otherProps[\"aria-label\"],\n    otherProps[\"aria-labelledby\"],\n    onValueChange\n  ]);\n  const state = useToggleState(ariaSwitchProps);\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current)\n      return;\n    const isInputRefChecked = !!inputRef.current.checked;\n    state.setSelected(isInputRefChecked);\n  }, [inputRef.current]);\n  const {\n    inputProps,\n    isPressed: isPressedKeyboard,\n    isReadOnly\n  } = useReactAriaSwitch(ariaSwitchProps, state, inputRef);\n  const { focusProps, isFocused, isFocusVisible } = useFocusRing({ autoFocus: inputProps.autoFocus });\n  const { hoverProps, isHovered } = useHover({\n    isDisabled: inputProps.disabled\n  });\n  const isInteractionDisabled = ariaSwitchProps.isDisabled || isReadOnly;\n  const [isPressed, setPressed] = useState(false);\n  const { pressProps } = usePress({\n    isDisabled: isInteractionDisabled,\n    onPressStart(e) {\n      if (e.pointerType !== \"keyboard\") {\n        setPressed(true);\n      }\n    },\n    onPressEnd(e) {\n      if (e.pointerType !== \"keyboard\") {\n        setPressed(false);\n      }\n    }\n  });\n  const pressed = isInteractionDisabled ? false : isPressed || isPressedKeyboard;\n  const isSelected = inputProps.checked;\n  const isDisabled = inputProps.disabled;\n  const slots = useMemo(\n    () => toggle({\n      ...variantProps,\n      disableAnimation\n    }),\n    [objectToDeps(variantProps), disableAnimation]\n  );\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const getBaseProps = (props2) => {\n    return {\n      ...mergeProps(hoverProps, pressProps, otherProps, props2),\n      ref: domRef,\n      className: slots.base({ class: clsx(baseStyles, props2 == null ? void 0 : props2.className) }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-selected\": dataAttr(isSelected),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocusVisible),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-pressed\": dataAttr(pressed)\n    };\n  };\n  const getWrapperProps = useCallback(\n    (props2 = {}) => {\n      return {\n        ...props2,\n        \"aria-hidden\": true,\n        className: clsx(slots.wrapper({ class: clsx(classNames == null ? void 0 : classNames.wrapper, props2 == null ? void 0 : props2.className) }))\n      };\n    },\n    [slots, classNames == null ? void 0 : classNames.wrapper]\n  );\n  const getInputProps = (props2 = {}) => {\n    return {\n      ...mergeProps(inputProps, focusProps, props2),\n      ref: mergeRefs(inputRef, ref),\n      id: inputProps.id,\n      onChange: chain(onChange, inputProps.onChange)\n    };\n  };\n  const getThumbProps = useCallback(\n    (props2 = {}) => ({\n      ...props2,\n      className: slots.thumb({ class: clsx(classNames == null ? void 0 : classNames.thumb, props2 == null ? void 0 : props2.className) })\n    }),\n    [slots, classNames == null ? void 0 : classNames.thumb]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}) => ({\n      ...props2,\n      id: labelId,\n      className: slots.label({ class: clsx(classNames == null ? void 0 : classNames.label, props2 == null ? void 0 : props2.className) })\n    }),\n    [slots, classNames == null ? void 0 : classNames.label, isDisabled, isSelected]\n  );\n  const getThumbIconProps = useCallback(\n    (props2 = {\n      includeStateProps: false\n    }) => mergeProps(\n      {\n        width: \"1em\",\n        height: \"1em\",\n        className: slots.thumbIcon({ class: clsx(classNames == null ? void 0 : classNames.thumbIcon) })\n      },\n      props2.includeStateProps ? {\n        isSelected\n      } : {}\n    ),\n    [slots, classNames == null ? void 0 : classNames.thumbIcon, isSelected]\n  );\n  const getStartContentProps = useCallback(\n    (props2 = {}) => ({\n      width: \"1em\",\n      height: \"1em\",\n      ...props2,\n      className: slots.startContent({ class: clsx(classNames == null ? void 0 : classNames.startContent, props2 == null ? void 0 : props2.className) })\n    }),\n    [slots, classNames == null ? void 0 : classNames.startContent, isSelected]\n  );\n  const getEndContentProps = useCallback(\n    (props2 = {}) => ({\n      width: \"1em\",\n      height: \"1em\",\n      ...props2,\n      className: slots.endContent({ class: clsx(classNames == null ? void 0 : classNames.endContent, props2 == null ? void 0 : props2.className) })\n    }),\n    [slots, classNames == null ? void 0 : classNames.endContent, isSelected]\n  );\n  return {\n    Component,\n    slots,\n    classNames,\n    domRef,\n    children,\n    thumbIcon,\n    startContent,\n    endContent,\n    isHovered,\n    isSelected,\n    isPressed: pressed,\n    isFocused,\n    isFocusVisible,\n    isDisabled,\n    getBaseProps,\n    getWrapperProps,\n    getInputProps,\n    getLabelProps,\n    getThumbProps,\n    getThumbIconProps,\n    getStartContentProps,\n    getEndContentProps\n  };\n}\n\nexport {\n  useSwitch\n};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ToggleProps} from '@react-types/checkbox';\nimport {useControlledState} from '@react-stately/utils';\n\nexport interface ToggleStateOptions extends Omit<ToggleProps, 'children'> {}\n\nexport interface ToggleState {\n  /** Whether the toggle is selected. */\n  readonly isSelected: boolean,\n\n  /** Updates selection state. */\n  setSelected(isSelected: boolean): void,\n\n  /** Toggle the selection state. */\n  toggle(): void\n}\n\n/**\n * Provides state management for toggle components like checkboxes and switches.\n */\nexport function useToggleState(props: ToggleStateOptions = {}): ToggleState {\n  let {isReadOnly} = props;\n\n  // have to provide an empty function so useControlledState doesn't throw a fit\n  // can't use useControlledState's prop calling because we need the event object from the change\n  let [isSelected, setSelected] = useControlledState(props.isSelected, props.defaultSelected || false, props.onChange);\n\n  function updateSelected(value) {\n    if (!isReadOnly) {\n      setSelected(value);\n    }\n  }\n\n  function toggleState() {\n    if (!isReadOnly) {\n      setSelected(!isSelected);\n    }\n  }\n\n  return {\n    isSelected,\n    setSelected: updateSelected,\n    toggle: toggleState\n  };\n}\n","\"use client\";\nimport {\n  useSwitch\n} from \"./chunk-JYO7OWIA.mjs\";\n\n// src/switch.tsx\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { cloneElement } from \"react\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Switch = forwardRef((props, ref) => {\n  const {\n    Component,\n    children,\n    startContent,\n    endContent,\n    thumbIcon,\n    getBaseProps,\n    getInputProps,\n    getWrapperProps,\n    getThumbProps,\n    getThumbIconProps,\n    getLabelProps,\n    getStartContentProps,\n    getEndContentProps\n  } = useSwitch({ ...props, ref });\n  const clonedThumbIcon = typeof thumbIcon === \"function\" ? thumbIcon(getThumbIconProps({ includeStateProps: true })) : thumbIcon && cloneElement(thumbIcon, getThumbIconProps());\n  const clonedStartContent = startContent && cloneElement(startContent, getStartContentProps());\n  const clonedEndContent = endContent && cloneElement(endContent, getEndContentProps());\n  return /* @__PURE__ */ jsxs(Component, { ...getBaseProps(), children: [\n    /* @__PURE__ */ jsx(VisuallyHidden, { elementType: \"span\", children: /* @__PURE__ */ jsx(\"input\", { ...getInputProps() }) }),\n    /* @__PURE__ */ jsxs(\"span\", { ...getWrapperProps(), children: [\n      startContent && clonedStartContent,\n      /* @__PURE__ */ jsx(\"span\", { ...getThumbProps(), children: thumbIcon && clonedThumbIcon }),\n      endContent && clonedEndContent\n    ] }),\n    children && /* @__PURE__ */ jsx(\"span\", { ...getLabelProps(), children })\n  ] });\n});\nSwitch.displayName = \"NextUI.Switch\";\nvar switch_default = Switch;\n\nexport {\n  switch_default\n};\n","// src/index.ts\nimport { useEffect, useLayoutEffect } from \"react\";\nvar useSafeLayoutEffect = Boolean(globalThis == null ? void 0 : globalThis.document) ? useLayoutEffect : useEffect;\nexport {\n  useSafeLayoutEffect\n};\n","/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject} from '@react-types/shared';\nimport {useEffect, useRef} from 'react';\nimport {useEffectEvent} from './useEffectEvent';\n\nexport function useFormReset<T>(\n  ref: RefObject<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement | null>,\n  initialValue: T,\n  onReset: (value: T) => void\n) {\n  let resetValue = useRef(initialValue);\n  let handleReset = useEffectEvent(() => {\n    if (onReset) {\n      onReset(resetValue.current);\n    }\n  });\n\n  useEffect(() => {\n    let form = ref?.current?.form;\n    form?.addEventListener('reset', handleReset);\n    return () => {\n      form?.removeEventListener('reset', handleReset);\n    };\n  }, [ref, handleReset]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {CSSProperties, JSXElementConstructor, ReactNode, useMemo, useState} from 'react';\nimport {useFocusWithin} from '@react-aria/interactions';\n\nexport interface VisuallyHiddenProps extends DOMAttributes {\n  /** The content to visually hide. */\n  children?: ReactNode,\n\n  /**\n   * The element type for the container.\n   * @default 'div'\n   */\n  elementType?: string | JSXElementConstructor<any>,\n\n  /** Whether the element should become visible on focus, for example skip links. */\n  isFocusable?: boolean\n}\n\nconst styles: CSSProperties = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  clipPath: 'inset(50%)',\n  height: '1px',\n  margin: '-1px',\n  overflow: 'hidden',\n  padding: 0,\n  position: 'absolute',\n  width: '1px',\n  whiteSpace: 'nowrap'\n};\n\nexport interface VisuallyHiddenAria {\n  visuallyHiddenProps: DOMAttributes\n}\n\n/**\n * Provides props for an element that hides its children visually\n * but keeps content visible to assistive technology.\n */\nexport function useVisuallyHidden(props: VisuallyHiddenProps = {}): VisuallyHiddenAria {\n  let {\n    style,\n    isFocusable\n  } = props;\n\n  let [isFocused, setFocused] = useState(false);\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !isFocusable,\n    onFocusWithinChange: (val) => setFocused(val)\n  });\n\n  // If focused, don't hide the element.\n  let combinedStyles = useMemo(() => {\n    if (isFocused) {\n      return style;\n    } else if (style) {\n      return {...styles, ...style};\n    } else {\n      return styles;\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isFocused]);\n\n  return {\n    visuallyHiddenProps: {\n      ...focusWithinProps,\n      style: combinedStyles\n    }\n  };\n}\n\n/**\n * VisuallyHidden hides its children visually, while keeping content visible\n * to screen readers.\n */\nexport function VisuallyHidden(props: VisuallyHiddenProps) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let {children, elementType: Element = 'div', isFocusable, style, ...otherProps} = props;\n  let {visuallyHiddenProps} = useVisuallyHidden(props);\n\n  return (\n    <Element {...mergeProps(otherProps, visuallyHiddenProps)}>\n      {children}\n    </Element>\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCallback, useEffect, useRef, useState} from 'react';\n\nexport function useControlledState<T, C = T>(value: Exclude<T, undefined>, defaultValue: Exclude<T, undefined> | undefined, onChange?: (v: C, ...args: any[]) => void): [T, (value: T, ...args: any[]) => void];\nexport function useControlledState<T, C = T>(value: Exclude<T, undefined> | undefined, defaultValue: Exclude<T, undefined>, onChange?: (v: C, ...args: any[]) => void): [T, (value: T, ...args: any[]) => void];\nexport function useControlledState<T, C = T>(value: T, defaultValue: T, onChange?: (v: C, ...args: any[]) => void): [T, (value: T, ...args: any[]) => void] {\n  let [stateValue, setStateValue] = useState(value || defaultValue);\n\n  let isControlledRef = useRef(value !== undefined);\n  let isControlled = value !== undefined;\n  useEffect(() => {\n    let wasControlled = isControlledRef.current;\n    if (wasControlled !== isControlled) {\n      console.warn(`WARN: A component changed from ${wasControlled ? 'controlled' : 'uncontrolled'} to ${isControlled ? 'controlled' : 'uncontrolled'}.`);\n    }\n    isControlledRef.current = isControlled;\n  }, [isControlled]);\n\n  let currentValue = isControlled ? value : stateValue;\n  let setValue = useCallback((value, ...args) => {\n    let onChangeCaller = (value, ...onChangeArgs) => {\n      if (onChange) {\n        if (!Object.is(currentValue, value)) {\n          onChange(value, ...onChangeArgs);\n        }\n      }\n      if (!isControlled) {\n        // If uncontrolled, mutate the currentValue local variable so that\n        // calling setState multiple times with the same value only emits onChange once.\n        // We do not use a ref for this because we specifically _do_ want the value to\n        // reset every render, and assigning to a ref in render breaks aborted suspended renders.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        currentValue = value;\n      }\n    };\n\n    if (typeof value === 'function') {\n      console.warn('We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320');\n      // this supports functional updates https://reactjs.org/docs/hooks-reference.html#functional-updates\n      // when someone using useControlledState calls setControlledState(myFunc)\n      // this will call our useState setState with a function as well which invokes myFunc and calls onChange with the value from myFunc\n      // if we're in an uncontrolled state, then we also return the value of myFunc which to setState looks as though it was just called with myFunc from the beginning\n      // otherwise we just return the controlled value, which won't cause a rerender because React knows to bail out when the value is the same\n      let updateFunction = (oldValue, ...functionArgs) => {\n        let interceptedValue = value(isControlled ? currentValue : oldValue, ...functionArgs);\n        onChangeCaller(interceptedValue, ...args);\n        if (!isControlled) {\n          return interceptedValue;\n        }\n        return oldValue;\n      };\n      setStateValue(updateFunction);\n    } else {\n      if (!isControlled) {\n        setStateValue(value);\n      }\n      onChangeCaller(value, ...args);\n    }\n  }, [isControlled, currentValue, onChange]);\n\n  return [currentValue, setValue];\n}\n"],"names":["mergeRefs","_len","arguments","length","refs","Array","_key","node","forEach","ref","value","isFunction","current","error","Error","assignRef","$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents","$6179b936705e76d3$var$hoverCount","$6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents","setTimeout","$6179b936705e76d3$var$handleGlobalPointerEvent","e","pointerType","$6179b936705e76d3$var$setupGlobalTouchEvents","document","PointerEvent","addEventListener","removeEventListener","$c87311424ea30a05$var$testUserAgent","re","_window_navigator_userAgentData","window","navigator","brands","some","brand","test","userAgent","$c87311424ea30a05$var$testPlatform","platform","$c87311424ea30a05$export$9ac100e40613ea10","$c87311424ea30a05$export$7bef049ce92e4224","maxTouchPoints","$c87311424ea30a05$export$fedb369cb70207f1","$c87311424ea30a05$export$78551043582a6a98","$c87311424ea30a05$export$a11b0059900ceec8","$431fbd86ca7dc216$export$b204af158042fbac","el","_el_ownerDocument","ownerDocument","$431fbd86ca7dc216$export$f21a1ffae260145a","defaultView","$bbed8b41f857bcc0$var$transitionsByElement","Map","$bbed8b41f857bcc0$var$transitionCallbacks","Set","$bbed8b41f857bcc0$var$setupGlobalEvents","isTransitionEvent","event","onTransitionEnd","target","properties","get","delete","propertyName","size","cb","clear","body","transitions","set","once","add","readyState","$14c0b72509d70225$var$state","$14c0b72509d70225$var$savedUserSelect","$14c0b72509d70225$var$modifiedElementMap","WeakMap","$14c0b72509d70225$export$16a4697467175487","$7R18e$isIOS","documentObject","$7R18e$getOwnerDocument","documentElement","style","webkitUserSelect","HTMLElement","SVGElement","userSelect","$14c0b72509d70225$export$b0d6fa1ab32e3295","fn","requestAnimationFrame","has","targetOldUserSelect","getAttribute","removeAttribute","$ae1eeba8b9eafd08$export$5165eccb35aaadb5","$3aeG1$react","createContext","register","displayName","$ff5963eb1fccf552$export$e08e3b67e392101e","callbacks","callback","Boolean","createElement","$bdb11010cef70236$var$idsUpdaterMap","$bdb11010cef70236$export$cd8c9cb68f842629","idA","idB","setIdA","setIdB","$3ef42575df84b30b$export$9d1611c77c2fe928","result","undefined","i","props","key","a","b","charCodeAt","id","$7jXr9$clsx","$f0a04ccd8dbdd83b$export$e5c5a5f917a5871c","$HgANd$react","useLayoutEffect","$e7801be82b4b2a53$export$4debdb1a3f0fa79e","context","$03deb23ff14920c4$export$4eaf04e54aa8eed6","globalListeners","$lPAwt$useRef","addGlobalListener","$lPAwt$useCallback","eventTarget","type","listener","options","removeGlobalListener","_globalListeners_current_get","removeAllGlobalListeners","$lPAwt$useEffect","$8ae05eaa5c114e9c$export$7f54fc3180508a52","$lmaYr$useRef","$lmaYr$useCallback","f","$7215afc6de606d6b$export$de79e2c695e052f3","element","$7215afc6de606d6b$var$supportsPreventScrollCached","focus","preventScroll","$7215afc6de606d6b$var$supportsPreventScroll","scrollableElements","parent","parentNode","rootScrollingElement","scrollingElement","offsetHeight","scrollHeight","offsetWidth","scrollWidth","push","scrollTop","scrollLeft","$7215afc6de606d6b$var$getScrollableElements","$7215afc6de606d6b$var$restoreScrollPosition","$ea8dcbcb9ea1b556$export$95185d699e05d4d7","modifiers","setOpening","_window_event_type","_window_event","metaKey","ctrlKey","altKey","shiftKey","startsWith","KeyboardEvent","keyIdentifier","MouseEvent","bubbles","cancelable","isOpening","dispatchEvent","$6a7db85432448f7f$export$60278871457622de","mozInputSource","isTrusted","buttons","detail","$f6c31cce2adf654f$var$usePressResponderContext","$7mdmh$useContext","contextProps","$7mdmh$mergeProps","$7mdmh$useSyncRef","$f6c31cce2adf654f$var$_shouldStopPropagation","$f6c31cce2adf654f$var$PressEvent","continuePropagation","shouldStopPropagation","$7mdmh$_","this","constructor","originalEvent","$7mdmh$_1","currentTarget","$f6c31cce2adf654f$var$LINK_CLICKED","Symbol","$f6c31cce2adf654f$export$45712eceda6fad21","onPress","onPressChange","onPressStart","onPressEnd","onPressUp","isDisabled","isPressed","isPressedProp","preventFocusOnPress","shouldCancelOnPointerExit","allowTextSelectionOnPress","_","domProps","setPressed","$7mdmh$useState","$7mdmh$useRef","ignoreEmulatedMouseEvents","ignoreClickAfterPress","didFirePressStart","isTriggeringEvent","activePointerId","isOverTarget","$7mdmh$useGlobalListeners","triggerPressStart","$7mdmh$useEffectEvent","state","triggerPressEnd","wasPressed","triggerPressUp","cancel","$f6c31cce2adf654f$var$createEvent","cancelOnPointerExit","pressProps","$7mdmh$useMemo","onKeyDown","$f6c31cce2adf654f$var$isValidKeyboardEvent","nativeEvent","contains","_state_metaKeyEvents","$f6c31cce2adf654f$var$shouldPreventDefaultKeyboard","preventDefault","repeat","originalTarget","pressUp","$7mdmh$getOwnerDocument","$7mdmh$chain","onKeyUp","stopPropagation","$7mdmh$isMac","metaKeyEvents","onClick","button","$7mdmh$openLink","$7mdmh$isVirtualClick","$7mdmh$focusWithoutScrolling","stopPressStart","stopPressUp","stopPressEnd","_state_metaKeyEvents1","$f6c31cce2adf654f$var$isHTMLAnchorLink","_state_target","events","values","onPointerDown","width","height","pressure","$f6c31cce2adf654f$var$shouldPreventDefault","pointerId","onPointerMove","onPointerUp","onPointerCancel","onMouseDown","$f6c31cce2adf654f$var$isOverTarget","onDragStart","onMouseUp","onMouseEnter","onMouseLeave","onTouchStart","touch","targetTouches","$f6c31cce2adf654f$var$getTouchFromEvent","identifier","$7mdmh$getOwnerWindow","onScroll","onTouchMove","$f6c31cce2adf654f$var$getTouchById","onTouchEnd","onTouchCancel","$7mdmh$useEffect","_ref_current_target","tagName","hasAttribute","code","role","HTMLInputElement","$f6c31cce2adf654f$var$isValidInputKey","HTMLTextAreaElement","isContentEditable","changedTouches","point","rect","getBoundingClientRect","pointRect","offsetX","offsetY","radiusX","radiusY","top","clientY","right","clientX","bottom","left","$f6c31cce2adf654f$var$getPointClientRect","HTMLButtonElement","$f6c31cce2adf654f$var$nonTextInputTypes","toggle","tv","slots","base","wrapper","groupDataFocusVisibleClasses","thumb","startContent","endContent","thumbIcon","label","variants","color","default","primary","secondary","success","warning","danger","sm","md","lg","true","disableAnimation","false","defaultVariants","compoundVariants","class","$d2c8e2b0480f3f34$export$cbe85ee05b554577","isReadOnly","name","children","ariaLabel","ariaLabelledby","validationState","isInvalid","console","warn","$bvdLj$usePress","labelProps","isLabelPressed","focusableProps","$bvdLj$useFocusable","interactions","$bvdLj$mergeProps","$bvdLj$filterDOMProps","labelable","$bvdLj$useFormReset","isSelected","setSelected","inputProps","checked","disabled","$b418ec0c85c52f27$export$d853f7095ae95f88","$ifSyJ$useToggle","$507fabe10e71c6fb$var$currentModality","$507fabe10e71c6fb$var$changeHandlers","$507fabe10e71c6fb$export$d90243b58daecda7","$507fabe10e71c6fb$var$hasEventBeforeFocus","$507fabe10e71c6fb$var$hasBlurredWindowRecently","$507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS","Tab","Escape","$507fabe10e71c6fb$var$triggerChangeHandlers","modality","handler","$507fabe10e71c6fb$var$handleKeyboardEvent","$28AnR$isMac","$507fabe10e71c6fb$var$isValidKey","$507fabe10e71c6fb$var$handlePointerEvent","$507fabe10e71c6fb$var$handleClickEvent","$28AnR$isVirtualClick","$507fabe10e71c6fb$var$handleFocusEvent","$507fabe10e71c6fb$var$handleWindowBlur","$507fabe10e71c6fb$var$setupGlobalFocusEvents","$28AnR$getOwnerWindow","windowObject","$28AnR$getOwnerDocument","prototype","apply","$507fabe10e71c6fb$var$tearDownWindowFocusTracking","loadListener","$507fabe10e71c6fb$export$b9b3dfddab17db27","$507fabe10e71c6fb$export$2f1888112f558a7d","$507fabe10e71c6fb$var$nonTextInputTypes","$507fabe10e71c6fb$export$ec71b4b83ac08ec3","deps","opts","$28AnR$useEffect","isTextInput","_e_target","IHTMLInputElement","IHTMLTextAreaElement","IHTMLElement","IKeyboardEvent","$507fabe10e71c6fb$var$isKeyboardFocusEvent","$8a9cb279dc87e130$export$905e7fc544a71f36","isDefaultPrevented","defaultPrevented","isPropagationStopped","persist","relatedTarget","eventPhase","timeStamp","$8a9cb279dc87e130$export$715c682d09d639cc","onBlur","stateRef","$6dfIe$useRef","isFocused","observer","$6dfIe$useLayoutEffect","disconnect","dispatchBlur","$6dfIe$useEffectEvent","$6dfIe$useCallback","HTMLSelectElement","onBlurHandler","MutationObserver","_stateRef_current_observer","relatedTargetEl","activeElement","FocusEvent","observe","attributes","attributeFilter","$a1ea59d68270f0dd$export$f8168d8dd8fd66e6","onFocus","onFocusProp","onBlurProp","onFocusChange","$hf0lj$useCallback","onSyntheticFocus","$hf0lj$getOwnerDocument","focusProps","$9ab94262bd0047c7$export$420e68273165f4ec","onBlurWithin","onFocusWithin","onFocusWithinChange","$3b9Q0$useRef","isFocusWithin","$3b9Q0$useCallback","focusWithinProps","$f7dceffc5ad7768b$export$4e328f61c538687f","autoFocus","within","$isWE5$useRef","isFocusVisible","$isWE5$isFocusVisible","setFocused","$isWE5$useState","isFocusVisibleState","setFocusVisible","updateState","$isWE5$useCallback","$isWE5$useFocusVisibleListener","$isWE5$useFocus","$isWE5$useFocusWithin","useSwitch","originalProps","_a","_b","globalContext","useProviderContext","variantProps","mapPropsVariants","variantKeys","as","isReadOnlyProp","defaultSelected","isSelectedProp","className","classNames","onChange","onValueChange","otherProps","Component","domRef","useRef","inputRef","labelId","useId","ariaSwitchProps","useMemo","$d8rik$useControlledState","useToggleState","useSafeLayoutEffect","isInputRefChecked","isPressedKeyboard","useReactAriaSwitch","useFocusRing","hoverProps","isHovered","onHoverStart","onHoverChange","onHoverEnd","setHovered","$AWxnT$useState","$AWxnT$useRef","$AWxnT$useEffect","triggerHoverEnd","$AWxnT$useMemo","triggerHoverStart","onPointerEnter","onPointerLeave","useHover","isInteractionDisabled","useState","usePress","pressed","objectToDeps","baseStyles","clsx","getWrapperProps","useCallback","props2","getThumbProps","getLabelProps","getThumbIconProps","includeStateProps","mergeProps","getStartContentProps","getEndContentProps","getBaseProps","dataAttr","getInputProps","chain","Switch","forwardRef","clonedThumbIcon","cloneElement","clonedStartContent","clonedEndContent","jsxs","jsx","VisuallyHidden","elementType","switch_default","globalThis","useEffect","$99facab73266f662$export$5add1d006293d136","initialValue","onReset","resetValue","$8rM3G$useRef","handleReset","$8rM3G$useEffect","_ref_current","form","$5c3e21d68f1c4674$var$styles","border","clip","clipPath","margin","overflow","padding","position","whiteSpace","$5c3e21d68f1c4674$export$a966af930f325cab","isFocusable","$7JYt2$useState","$7JYt2$useFocusWithin","val","visuallyHiddenProps","$7JYt2$useMemo","$5c3e21d68f1c4674$export$439d29a4e110a164","Element","$7JYt2$react","$7JYt2$mergeProps","$458b0a5536c1a7cf$export$40bfa8c7b0832715","defaultValue","stateValue","setStateValue","$3whtM$useState","isControlledRef","$3whtM$useRef","isControlled","$3whtM$useEffect","wasControlled","currentValue","setValue","$3whtM$useCallback","args","onChangeCaller","_len2","onChangeArgs","_key2","Object","is","updateFunction","oldValue","_len3","functionArgs","_key3","interceptedValue"],"sourceRoot":""}